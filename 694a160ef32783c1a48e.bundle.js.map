{"version":3,"file":"694a160ef32783c1a48e.bundle.js","mappings":"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","sources":["webpack://coin-clicker/webpack/bootstrap","webpack://coin-clicker/./src/styles.scss","webpack://coin-clicker/./node_modules/css-loader/dist/runtime/api.js","webpack://coin-clicker/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://coin-clicker/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://coin-clicker/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://coin-clicker/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://coin-clicker/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://coin-clicker/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://coin-clicker/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://coin-clicker/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://coin-clicker/./src/languages/_fb.ts","webpack://coin-clicker/./src/languages/en_us.ts","webpack://coin-clicker/./src/languages/ sync nonrecursive \\.ts","webpack://coin-clicker/webpack/runtime/compat get default export","webpack://coin-clicker/webpack/runtime/define property getters","webpack://coin-clicker/webpack/runtime/global","webpack://coin-clicker/webpack/runtime/hasOwnProperty shorthand","webpack://coin-clicker/webpack/runtime/make namespace object","webpack://coin-clicker/webpack/runtime/publicPath","webpack://coin-clicker/webpack/runtime/jsonp chunk loading","webpack://coin-clicker/webpack/runtime/nonce","webpack://coin-clicker/./src/Selector.ts","webpack://coin-clicker/./src/Buildings.ts","webpack://coin-clicker/./src/Upgrades.ts","webpack://coin-clicker/./src/Effect.ts","webpack://coin-clicker/./src/Achievements.ts","webpack://coin-clicker/./src/FallingCoin.ts","webpack://coin-clicker/./src/SaveManager.ts","webpack://coin-clicker/./src/Game.ts","webpack://coin-clicker/./src/styles.scss?a609","webpack://coin-clicker/./src/HtmlBuilder.ts","webpack://coin-clicker/./src/Translator.ts","webpack://coin-clicker/./src/CoinImager.ts","webpack://coin-clicker/./src/index.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./fonts/NotoSans.ttf\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"images/icons.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buildings-wrapper,.middle-wrapper,.canvas-wrapper{height:100vh;position:absolute;top:0;margin:0}@font-face{font-family:\\\"Noto Sans\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \")}version{font-size:20px;text-align:center;display:block;width:100%}.savetext{opacity:0;color:#000;font-size:25px;font-weight:bolder;transition-duration:.65s;position:absolute;bottom:0;left:0;width:300px;user-select:none;text-align:center}.savetext span{width:100%;height:100%}body[saved=\\\"1\\\"] .savetext{opacity:1;transition-duration:none}body,button{background-color:#fff6a9;margin:0;overflow:hidden;font-family:\\\"Noto Sans\\\" !important}button{cursor:pointer}h1{margin:0}.canvas-wrapper{position:absolute;width:300px;left:0;top:0}.canvas-wrapper>canvas{width:100%;height:100%;position:absolute;left:0;top:0}.canvas-wrapper>canvas[bg=\\\"1\\\"]{transition-duration:1s;background-color:#fff06b}.canvas-wrapper>canvas[bg=\\\"-1\\\"]{transition-duration:1.5s;background-color:#ff816b}.canvas-wrapper .header{text-align:center;width:100%;position:absolute;user-select:none;z-index:1;background-image:linear-gradient(to bottom, rgb(255, 255, 140), rgba(255, 255, 140, 0.7), transparent);padding-top:10px}.canvas-wrapper .header .coins-header{width:100%;line-height:0;display:inline}.canvas-wrapper .header .coins-header[big=\\\"1\\\"]{display:inherit}.canvas-wrapper .header .coins-header[big=\\\"1\\\"] span{display:inherit}.canvas-wrapper .header .coins-header>div{display:inline-block;vertical-align:middle;margin-bottom:5px}.canvas-wrapper .header .coins-header span{margin-left:-4px;line-height:.8;display:inline span;display-font-size:25px;display-transition-duration:1s}.canvas-wrapper .header .cpc-header,.canvas-wrapper .header .cps-header{width:100%}.canvas-wrapper .header .cpc-header.cpc-header,.canvas-wrapper .header .cps-header.cpc-header{margin-top:6.5px}.canvas-wrapper .header .cpc-header.cps-header,.canvas-wrapper .header .cps-header.cps-header{margin-top:-20px}.canvas-wrapper .header .cpc-header div,.canvas-wrapper .header .cps-header div{display:inline-block;vertical-align:middle;line-height:100%}.canvas-wrapper .header .cpc-header span,.canvas-wrapper .header .cps-header span{margin-left:-4px}.middle-wrapper{width:calc(100vw - 300px - 300px);left:300px}.middle-wrapper .tab-wrapper{width:100%;height:65px;background-color:#eec43c;position:absolute;top:0}.middle-wrapper .tab-wrapper>div{width:calc(100% - 10px);height:calc(100% - 10px);margin-left:5px;margin-top:5px;display:flex}.middle-wrapper .tab-wrapper>div button{height:100%;padding:0;width:50%;height:calc(100% - 8px);border:3px solid rgba(0,0,0,.3);background-color:#fcdb4a;border-radius:5px;margin:4px;transition-duration:.5s}.middle-wrapper .tab-wrapper>div button.selected{background-color:#967a00;color:#fff}.middle-wrapper .work-wrapper{width:100%;height:calc(100% - 65px);background-color:#ffe790;position:absolute;top:65px;overflow:none}.middle-wrapper .work-wrapper .stats-wrapper,.middle-wrapper .work-wrapper .options-wrapper{position:absolute;overflow-y:scroll;margin-left:15px;line-height:15px;width:calc(100% - 20px);height:100%}.middle-wrapper .work-wrapper .stats-wrapper [stat],.middle-wrapper .work-wrapper .options-wrapper [stat]{font-size:20px;font-weight:500}.middle-wrapper .work-wrapper .stats-wrapper .saveGameFile,.middle-wrapper .work-wrapper .stats-wrapper .saveGameText,.middle-wrapper .work-wrapper .stats-wrapper .loadGameFile,.middle-wrapper .work-wrapper .stats-wrapper .loadGameText,.middle-wrapper .work-wrapper .options-wrapper .saveGameFile,.middle-wrapper .work-wrapper .options-wrapper .saveGameText,.middle-wrapper .work-wrapper .options-wrapper .loadGameFile,.middle-wrapper .work-wrapper .options-wrapper .loadGameText{margin-right:5px}.buildings-wrapper{width:300px;height:100%;right:0;overflow-y:scroll}.buildings-wrapper span{background-color:rgba(0,0,0,.2);margin:6px;margin-bottom:8px;padding-left:4px;padding-right:4px;border-radius:4px;z-index:999}.buildings-wrapper .buildings{height:100%;width:100%}.buildings-wrapper .buildings>button{width:100%;border:0;padding:0}.buildings-wrapper .buildings>button>div{height:75px;background-color:#ffec97;transition-duration:.4s;border:4px solid #ffde71;line-height:0}.buildings-wrapper .buildings>button>div[afford=false]{background-color:#2b2300;color:#fff}.buildings-wrapper .buildings>button>div[afford=false] h1{color:rgba(255,255,255,.4)}.buildings-wrapper .buildings>button>div h2{position:absolute;right:15px}.buildings-wrapper .buildings>button>div>div{position:absolute;right:10px;margin-top:40px;font-size:17px;font-weight:bold;white-space:nowrap;z-index:1}.buildings-wrapper .buildings>button>div>div img{margin-bottom:-4px}.buildings-wrapper .buildings>button>div h1{font-size:75px;position:absolute;right:30px;margin-top:34px;color:rgba(0,0,0,.4);user-select:none}.buildings-wrapper .buildings>button>div img.big{margin-top:5.5px;margin-right:197.5px;transition-duration:.825s;filter:brightness(0) invert(100%);opacity:1}.buildings-wrapper .buildings>button>div img.big.unlock{filter:none;opacity:1}.buildings-wrapper .upgrades button{border:0;padding:0}.buildings-wrapper .upgrades button div{border:2px solid rgba(0,0,0,.2);margin:2px}.buildings-wrapper .upgrades button[afford=true]{background-color:#ffde71}.buildings-wrapper .upgrades button[afford=true] div{border:3px solid rgba(0,0,0,.45)}.icon{background-color:rgba(0,0,0,0);background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");background-repeat:no-repeat}.building-tooltip{right:300px;z-index:5;background-color:rgba(0,0,0,.5);position:absolute;border-radius:15px;position:absolute;color:#fff;padding:10px;display:block}.building-tooltip h2{margin:0;float:right;max-width:177px;text-align:right}.building-tooltip img{position:absolute}.building-tooltip br{line-height:50px}.building-tooltip p{line-height:17.5px;width:225px}.upgrade-tooltip{z-index:5;background-color:rgba(0,0,0,.5);position:absolute;border-radius:15px;position:absolute;color:#fff;padding:10px;display:block}.upgrade-tooltip h2{font-size:18px;margin:0;float:right}.upgrade-tooltip div.nameIn{width:calc(100% - 48px);float:right}.upgrade-tooltip img{position:absolute}.upgrade-tooltip br{line-height:50px}.upgrade-tooltip p{line-height:17.5px;width:225px;margin:2px 0}.upgrade-tooltip span{margin-left:22.5px;font-size:18px}.upgrade-tooltip span.afford{color:#bfb}.upgrade-tooltip span.noafford{color:#fbb}.buy-bar{width:100%;height:25px;background-color:#444;margin-bottom:15px}.buy-bar button{width:32%;height:20px;background-color:#555;margin:0;padding:0;border:none;display:inline;transition:ease-in .35s;font-weight:bold}.buy-bar button.selected{background-color:#ababab}.buy-bar button[value=\\\"10\\\"]{color:#040}.buy-bar button[value=\\\"100\\\"]{color:#044}.achievements{position:absolute;width:325px;max-height:100vh;bottom:0;left:50%;transform:translate(-50%, 0%)}.achievements>div{position:absolute;bottom:0}.achievements>div>div{width:100%;background-color:rgba(0,0,0,.55);border-radius:20px;border:4px solid rgba(0,0,0,.7);z-index:100;position:relative}.achievements>div>div div.imgdiv{width:32px;height:32px;margin-left:10px;margin-top:10px;position:absolute;outline:4px solid rgba(255,255,255,.815)}.achievements>div>div div.titlediv{width:calc(100% - 32px - 20px);color:#fff;height:48px;margin-top:5px;font-size:10px;line-height:20px;position:absolute;margin-left:54px}.achievements>div>div div.titlediv h1{margin:0;word-wrap:break-word}.achievements>div>div div.adiv{font-size:18px;line-height:17.5px;color:#fff;margin-top:60px;margin-left:10px}.achievements>div>div div.adiv>div{width:100%;height:-2px}.achievements>div>div button{background-color:rgba(0,0,0,0);position:absolute;font-size:25px;font-weight:bolder;color:#000;margin-left:-5px;margin-top:calc(var(--up)*-1px - 10px);border:0;text-shadow:0 0 10px #fff}achievements div.imgdiv{width:64px;height:64px;border:4px solid rgba(0,0,0,.815);margin-right:10px;margin-bottom:10px;display:inline-block;position:relative}achievements div.category{background-color:rgba(0,0,0,.375);height:50px;width:calc(100% - 15px);font-size:25px;text-align:center;line-height:35px;margin-top:22.5px;margin-bottom:7.5px;font-weight:bold;color:#fff}achievements div.category[unlocked=\\\"0\\\"]{height:30px;background-color:rgba(0,0,0,.125)}achievements div.category span{font-size:15px;line-height:0px;position:relative;top:-10px}.achievement-tooltip{position:absolute;left:0;top:0;z-index:4}.achievement-tooltip>div{width:325px;background-color:rgba(0,0,0,.6);border-radius:20px;border:4px solid rgba(0,0,0,.75)}.achievement-tooltip>div div.imgdiv{width:32px;height:32px;margin-left:10px;margin-top:10px;position:absolute;outline:4px solid rgba(255,255,255,.815)}.achievement-tooltip>div div.titlediv{width:calc(100% - 32px - 16px);color:#fff;height:48px;margin-top:5px;font-size:10px;line-height:20px;position:absolute;margin-left:54px}.achievement-tooltip>div div.titlediv h1{margin:0;word-wrap:break-word}.achievement-tooltip>div div.adiv{font-size:18px;line-height:17.5px;color:#fff;margin-top:60px;margin-left:10px}.achievement-tooltip>div div.adiv>div{width:100%;height:-2px}.achievement-tooltip>div button{background-color:rgba(0,0,0,0);position:absolute;font-size:25px;font-weight:bolder;color:#000;margin-left:-5px;margin-top:-118.5px;border:0;text-shadow:0 0 10px #fff}::-webkit-scrollbar{background-color:#ffe896;border:2px #fff5d4 solid}::-webkit-scrollbar-thumb{background-color:#fff5d4;border:2px #000 solid;box-shadow:0 0 25px rgba(255,255,255,.75)}.dialog{width:100vw;height:100vh;position:absolute;left:0;top:0}.dialog .black{position:absolute;left:0;top:0;background-color:rgba(0,0,0,.45);z-index:10000;width:100%;height:100%}.dialog .black .box{width:max(35%,300px);min-height:50px;background-color:#ffe790;position:absolute;top:50%;left:50%;-ms-transform:translate(-50%, -50%);transform:translate(-50%, -50%);border-radius:10px;box-shadow:0 0 2px #fff;text-align:center}.dialog .black .box .content{padding:12.5px}.dialog .black .box p{margin:10px}.dialog .black .box textarea{width:calc(100% - 50px);height:250px;margin-bottom:10px;background-color:rgba(0,0,0,.15);outline:none;border:none;color:#fff;font-size:17.5px}.dialog .black .box button{margin:5px}.dialog .black .box span[color=red]{color:red}.dialog .black .box .title{width:100%;height:40px;background-color:#ffdc67;text-align:center;vertical-align:middle;color:#000;font-size:22.5px;line-height:40px;border-top-left-radius:10px;border-top-right-radius:10px}textarea[unresizable]{resize:none}.loadScreen{width:100vw;height:100vh;position:absolute;left:0;top:0;background-color:#ffde71;color:#000;text-align:center}.loadScreen h1{margin-top:50px}.loadScreen.loaded{transition-duration:.45s;visibility:hidden;opacity:0}input[type=checkbox]{accent-color:#fff6c3;outline:1.5px solid #000;margin-right:10px}.effects{left:0;bottom:0;width:300px;position:absolute;user-select:none}.effects>div{width:100%;height:100%}.effects>div>div{width:48px;height:48px;border:4px #000 solid;margin-right:5px;margin-bottom:5px;display:inline-block;z-index:7}.effects>div>div canvas{position:absolute;margin-left:-48px}.effects>div>div img{position:relative;z-index:15}.effects>div>div[buff=\\\"1\\\"]{animation:buff 3s ease infinite;background:linear-gradient(-55deg, transparent, #ffe07c, transparent, #fffd7b)}.effects>div>div[buff=\\\"-1\\\"]{animation:buff 3s ease infinite;background:linear-gradient(-55deg, transparent, #ff7c7c, transparent, #ffa599)}.effect-tooltip{width:325px;background-color:rgba(0,0,0,.6);border-radius:20px;border:4px solid rgba(0,0,0,.75);padding-left:10px;color:#fff;position:absolute}@keyframes buff{0%{background-position:0% 50%}50%{background-position:100% 50%}100%{background-position:0% 50%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"$CW: 300px;\\n$BW: 300px;\\n$TH: 65px;\\n$M: 10px;\\n\\n$TB: 2;\\n\\n%wrap {\\n    height: 100vh;\\n    position: absolute;\\n    top: 0;\\n    margin: 0;\\n}\\n\\n@font-face {\\n    font-family: \\\"Noto Sans\\\";\\n    src: url(\\\"./fonts/NotoSans.ttf\\\");\\n}\\n\\nversion {\\n    font-size: 20px;\\n    text-align: center;\\n    display: block;\\n    width: 100%;\\n}\\n\\n.savetext {\\n    opacity: 0;\\n    color: black;\\n    font-size: 25px;\\n    font-weight: bolder;\\n    transition-duration: 0.65s;\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    width: $CW;\\n    user-select: none;\\n\\n    text-align: center;\\n\\n    span {\\n        width: 100%;\\n        height: 100%;\\n    }\\n\\n    body[saved=\\\"1\\\"] & {\\n        opacity: 1;\\n        transition-duration: none;\\n    }\\n}\\n\\nbody, button {\\n    background-color: #fff6a9;\\n    margin: 0;\\n    overflow: hidden;\\n    font-family: \\\"Noto Sans\\\" !important;\\n}\\n\\nbutton {\\n    cursor: pointer;\\n}\\n\\nh1 {\\n    margin: 0;\\n}\\n\\n.canvas-wrapper {\\n    @extend %wrap;\\n\\n    position: absolute;\\n    width: $CW;\\n    left: 0;\\n    top: 0;\\n\\n    >canvas {\\n        width: 100%;\\n        height: 100%;\\n        position: absolute;\\n        left: 0;\\n        top: 0;\\n\\n        &[bg=\\\"1\\\"] {\\n            transition-duration: 1s;\\n            background-color: #fff06b;\\n        }\\n        &[bg=\\\"-1\\\"] {\\n            transition-duration: 1.5s;\\n            background-color: #ff816b;\\n        }\\n    }\\n\\n    .header {\\n        text-align: center;\\n        width: 100%;\\n        position: absolute;\\n        user-select: none;\\n        z-index: 1;\\n        background-image: linear-gradient(to bottom, rgb(255, 255, 140), rgba(255, 255, 140, 0.7), transparent);\\n\\n        padding-top: 10px;\\n\\n        .coins-header {\\n            width: 100%;\\n            line-height: 0;\\n\\n            &[big=\\\"1\\\"] {\\n                display: inherit;\\n\\n                span {\\n                    display: inherit;\\n                }\\n            }\\n\\n            display: inline;\\n\\n            >div {\\n                display: inline-block;\\n                vertical-align: middle;\\n                margin-bottom: 5px;\\n            }\\n\\n            span {\\n                margin-left: -4px;\\n                line-height: 0.8;\\n                display: inline\\n\\n                span {\\n                    font-size: 25px;\\n                    transition-duration: 1s;\\n                }\\n            }\\n        }\\n\\n        .cpc-header, .cps-header {\\n            width: 100%;\\n            \\n            \\n            &.cpc-header {\\n                margin-top: 6.5px;\\n            }\\n            &.cps-header {\\n                margin-top: -20px;\\n            }\\n\\n            div {\\n                display: inline-block;\\n                vertical-align: middle;\\n                line-height: 100%;\\n            }\\n\\n            span {\\n                margin-left: -4px;\\n            }\\n        }\\n    }\\n}\\n\\n.middle-wrapper {\\n    @extend %wrap;\\n    \\n    width: calc(100vw - $CW - $BW);\\n    left: $CW;\\n\\n    .tab-wrapper {\\n        width: 100%;\\n        height: $TH;\\n        background-color: #eec43c;\\n        position: absolute;\\n        top: 0;\\n\\n        >div {\\n            width: calc(100% - $M);\\n            height: calc(100% - $M);\\n            margin-left: calc($M / 2);\\n            margin-top: calc($M / 2);\\n            display: flex;\\n\\n            button {\\n                height: 100%;\\n                padding: 0;\\n                width: calc(100% / $TB);\\n                height: calc(100% - 8px);\\n                border: 3px solid rgba(0,0,0,0.3);\\n                background-color: #fcdb4a;\\n                border-radius: 5px;\\n                margin: 4px;\\n                transition-duration: 0.5s;\\n\\n                &.selected {\\n                    background-color: #967a00;\\n                    color: white;\\n                }\\n            }\\n        }\\n    }\\n\\n    .work-wrapper {\\n        width: 100%;\\n        height: calc(100% - $TH);\\n        background-color: #ffe790;\\n        position: absolute;\\n        top: $TH;\\n        overflow: none;\\n\\n        .stats-wrapper, .options-wrapper {\\n            position: absolute;\\n            overflow-y: scroll;\\n            margin-left: 15px;\\n            line-height: 15px;\\n\\n            width: calc(100% - 20px);\\n            height: 100%;\\n\\n            [stat] {\\n                font-size: 20px;\\n                font-weight: 500;\\n            }\\n\\n            .saveGameFile, .saveGameText, .loadGameFile, .loadGameText {\\n                margin-right: 5px;\\n            }\\n        }\\n    }\\n}\\n\\n.buildings-wrapper {\\n    @extend %wrap;\\n    \\n    width: $BW;\\n    height: 100%;\\n\\n    right: 0;\\n    overflow-y: scroll;\\n\\n    span {\\n        background-color: rgba(0,0,0,0.2);\\n        margin: 6px;\\n        margin-bottom: 8px;\\n        padding-left: 4px;\\n        padding-right: 4px;\\n        border-radius: 4px;\\n        z-index: 999;\\n    }\\n\\n    .buildings {\\n        height: 100%;\\n        width: 100%;\\n\\n        >button {\\n            width: 100%;\\n            border: 0;\\n            padding: 0;\\n            \\n            >div {\\n                height: 75px;\\n                background-color: rgb(255, 236, 151);\\n                transition-duration: 0.4s;\\n\\n                &[afford=\\\"false\\\"] {\\n                    background-color: rgb(43, 35, 0);\\n                    color: white;\\n\\n                    h1 {\\n                        color: rgba(255, 255, 255, 0.4);\\n                    }\\n                }\\n\\n                border: 4px solid #ffde71;\\n                line-height: 0;\\n\\n                h2 {\\n                    position: absolute;\\n                    right: 15px;\\n                }\\n\\n                >div {\\n                    position: absolute;\\n                    right: 10px;\\n                    margin-top: 40px;\\n                    font-size: 17px;\\n                    font-weight: bold;\\n                    white-space: nowrap;\\n                    z-index: 1;\\n\\n                    img {\\n                        margin-bottom: -4px;\\n                    }\\n                }\\n\\n                h1 {\\n                    font-size: 75px;\\n                    position: absolute;\\n                    right: 30px;\\n                    margin-top: 34px;\\n                    color: rgba(0, 0, 0, 0.4);\\n                    user-select: none;\\n                }\\n\\n                img.big {\\n                    margin-top: 5.5px;\\n                    margin-right: calc($BW - 102.5px);\\n                    transition-duration: 0.825s;\\n                    filter: brightness(0) invert(100%);\\n                    opacity: 1;\\n\\n                    &.unlock {\\n                        filter: none;\\n                        opacity: 1;\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    .upgrades {\\n        button {\\n            border: 0;\\n            padding: 0;\\n            div {\\n                border: 2px solid rgba(0, 0, 0, 0.2);\\n                margin: 2px;\\n            }\\n            \\n            &[afford=\\\"true\\\"] {\\n                background-color: #ffde71;\\n                div {\\n                    border: 3px solid rgba(0, 0, 0, 0.45);\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n.icon {\\n    background-color: transparent;\\n    background-image: url(images/icons.png);\\n    background-repeat: no-repeat;\\n}\\n\\n.building-tooltip {\\n    right: $BW;\\n    z-index: 5;\\n    background-color: rgba(0, 0, 0, 0.5);\\n    position: absolute;\\n    border-radius: 15px;\\n    position: absolute;\\n    color: white;\\n    padding: 10px;\\n    display: block;\\n    h2 {\\n        margin: 0;\\n        float: right;\\n        max-width: calc(225px - 48px);\\n        text-align: right;\\n    }\\n    img {\\n        position: absolute;\\n    }\\n    br {\\n        line-height: 50px;\\n    }\\n    p {\\n        line-height: 17.5px;\\n        width: 225px;\\n    }\\n}\\n\\n.upgrade-tooltip {\\n    z-index: 5;\\n    background-color: rgba(0, 0, 0, 0.5);\\n    position: absolute;\\n    border-radius: 15px;\\n    position: absolute;\\n    color: white;\\n    padding: 10px;\\n    display: block;\\n    h2 {\\n        font-size: 18px;\\n        margin: 0;\\n        float: right;\\n    }\\n    div.nameIn {\\n        width: calc(100% - 48px);\\n        float: right\\n    }\\n    img {\\n        position: absolute;\\n    }\\n    br {\\n        line-height: 50px;\\n    }\\n    p {\\n        line-height: 17.5px;\\n        width: 225px;\\n        margin: 2px 0;\\n    }\\n    span {\\n        margin-left: 22.5px;\\n        font-size: 18px;\\n        &.afford {\\n            color: #bbffbb;\\n        }\\n        &.noafford {\\n            color: #ffbbbb;\\n        }\\n    }\\n}\\n\\n.buy-bar {\\n    width: 100%;\\n    height: 25px;\\n    background-color: #444;\\n    margin-bottom: 15px;\\n    button {\\n        width: 32%;\\n        height: 20px;\\n        background-color: #555;\\n        margin: 0;\\n        padding: 0;\\n        border: none;\\n        display: inline;\\n        transition: ease-in 0.35s;\\n        font-weight: bold;\\n        &.selected {\\n            background-color: #ababab;\\n        }\\n        &[value=\\\"10\\\"] {\\n            color: #040;\\n        }\\n        &[value=\\\"100\\\"] {\\n            color: #044;\\n        }\\n    }\\n}\\n\\n.achievements {\\n    position: absolute;\\n    width: 325px;\\n    max-height: 100vh;\\n    bottom: 0;\\n    \\n    left: 50%;\\n    transform: translate(-50%, 0%);\\n\\n    >div {\\n        position: absolute;\\n        bottom: 0;\\n\\n        >div {\\n            width: 100%;\\n            background-color: rgba(0, 0, 0, 0.55);\\n            border-radius: 20px;\\n            border: 4px solid rgba(0, 0, 0, 0.7);\\n            z-index: 100;\\n            position: relative;\\n\\n            div.imgdiv {\\n                width: 32px;\\n                height: 32px;\\n                margin-left: 10px;\\n                margin-top: 10px;\\n                position: absolute;\\n                outline: 4px solid rgba(255, 255, 255, 0.815);\\n            }\\n\\n            div.titlediv {\\n                width: calc(100% - 32px - 20px);\\n                color: white;\\n                height: 48px;\\n                margin-top: 5px;\\n                font-size: 10px;\\n                line-height: 20px;\\n                position: absolute;\\n                margin-left: 54px;\\n                h1 {\\n                    margin: 0;\\n                    word-wrap: break-word;\\n                }\\n            }\\n\\n            div.adiv {\\n                font-size: 18px;\\n                line-height: 17.5px;\\n                color: white;\\n                margin-top: 60px;\\n                margin-left: 10px;\\n\\n                >div {\\n                    width: 100%;\\n                    height: -2px;\\n                }\\n            }\\n\\n            button {\\n                background-color: transparent;\\n                position: absolute;\\n                font-size: 25px;\\n                font-weight: bolder;\\n                color: rgb(0, 0, 0);\\n                margin-left: -5px;\\n                margin-top: calc(var(--up) * -1px - 10px);\\n                border: 0;\\n                text-shadow: 0 0 10px white;\\n            }\\n        }\\n    }\\n}\\n\\nachievements div.imgdiv {\\n    width: 64px;\\n    height: 64px;\\n    border: 4px solid rgba(0, 0, 0, 0.815);\\n    margin-right: 10px;\\n    margin-bottom: 10px;\\n    display: inline-block;\\n    position: relative;\\n}\\n\\nachievements div.category {\\n    background-color: rgba(0, 0, 0, 0.375);\\n    height: 50px;\\n    width: calc(100% - 15px);\\n    font-size: 25px;\\n    text-align: center;\\n    line-height: 35px;\\n    margin-top: 22.5px;\\n    margin-bottom: 7.5px;\\n    font-weight: bold;\\n    color: white;\\n\\n    &[unlocked=\\\"0\\\"] {\\n        height: 30px;\\n        background-color: rgba(0, 0, 0, 0.125);\\n    }\\n\\n    span {\\n        font-size: 15px;\\n        line-height: 0px;\\n        position: relative;\\n        top: -10px;\\n    }\\n}\\n\\n.achievement-tooltip {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    z-index: 4;\\n\\n    >div {\\n        width: 325px;\\n        background-color: rgba(0, 0, 0, 0.6);\\n        border-radius: 20px;\\n        border: 4px solid rgba(0, 0, 0, 0.75);\\n\\n        div.imgdiv {\\n            width: 32px;\\n            height: 32px;\\n            margin-left: 10px;\\n            margin-top: 10px;\\n            position: absolute;\\n            outline: 4px solid rgba(255, 255, 255, 0.815);\\n        }\\n\\n        div.titlediv {\\n            width: calc(100% - 32px - 16px);\\n            color: white;\\n            height: 48px;\\n            margin-top: 5px;\\n            font-size: 10px;\\n            line-height: 20px;\\n            position: absolute;\\n            margin-left: 54px;\\n            h1 {\\n                margin: 0;\\n                word-wrap: break-word;\\n            }\\n        }\\n\\n        div.adiv {\\n            font-size: 18px;\\n            line-height: 17.5px;\\n            color: white;\\n            margin-top: 60px;\\n            margin-left: 10px;\\n\\n            >div {\\n                width: 100%;\\n                height: -2px;\\n            }\\n        }\\n\\n        button {\\n            background-color: transparent;\\n            position: absolute;\\n            font-size: 25px;\\n            font-weight: bolder;\\n            color: rgb(0, 0, 0);\\n            margin-left: -5px;\\n            margin-top: -118.5px;\\n            border: 0;\\n            text-shadow: 0 0 10px white;\\n        }\\n    }\\n}\\n\\n::-webkit-scrollbar {\\n    background-color: #ffe896;\\n    border: 2px #fff5d4 solid;\\n}\\n::-webkit-scrollbar-thumb {\\n    background-color: #fff5d4;\\n    border: 2px black solid;\\n\\n    box-shadow: 0 0 25px rgba(255, 255, 255, 0.75);\\n}\\n\\n.dialog {\\n    width: 100vw;\\n    height: 100vh;\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    .black {\\n        position: absolute;\\n        left: 0;\\n        top: 0;\\n        background-color: rgba(0, 0, 0, 0.45);\\n        z-index: 10000;\\n        width: 100%;\\n        height: 100%;\\n\\n        .box {\\n            width: max(35%, 300px);\\n            min-height: 50px;\\n            background-color: #ffe790;\\n            position: absolute;\\n\\n            top: 50%;\\n            left: 50%;\\n            -ms-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n            border-radius: 10px;\\n\\n            box-shadow: 0 0 2px white;\\n\\n            .content {\\n                padding: 12.5px;\\n            }\\n\\n            text-align: center;\\n\\n            p {\\n                margin: 10px;\\n            }\\n\\n            textarea {\\n                width: calc(100% - 50px);\\n                height: 250px;\\n                margin-bottom: 10px;\\n                background-color: rgba(0, 0, 0, 0.15);\\n                outline: none;\\n                border: none;\\n                color: white;\\n                font-size: 17.5px;\\n            }\\n\\n            button {\\n                margin: 5px;\\n            }\\n\\n            span[color=\\\"red\\\"] {\\n                color: red;\\n            }\\n\\n            .title {\\n                width: 100%;\\n                height: 40px;\\n                background-color: #ffdc67;\\n                text-align: center;\\n                vertical-align: middle;\\n                color: black;\\n                font-size: 22.5px;\\n                line-height: 40px;\\n                border-top-left-radius: 10px;\\n                border-top-right-radius: 10px;\\n            }\\n        }\\n    }\\n}\\n\\ntextarea[unresizable] {\\n    resize: none;\\n}\\n\\n.loadScreen {\\n    width: 100vw;\\n    height: 100vh;\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    background-color: #ffde71;\\n    color: black;\\n    text-align: center;\\n\\n    h1 {\\n        margin-top: 50px;\\n    }\\n\\n    &.loaded {\\n        transition-duration: 0.45s;\\n        visibility: hidden;\\n        opacity: 0;\\n    }\\n}\\n\\ninput[type=\\\"checkbox\\\"] {\\n    accent-color: #fff6c3;\\n    outline: 1.5px solid black;\\n    margin-right: 10px;\\n}\\n\\n.effects {\\n    left: 0;\\n    bottom: 0;\\n    width: $CW;\\n    position: absolute;\\n    user-select: none;\\n\\n    >div {\\n        width: 100%;\\n        height: 100%;\\n        >div {\\n            width: 48px;\\n            height: 48px;\\n            border: 4px rgb(0, 0, 0) solid;\\n            margin-right: 5px;\\n            margin-bottom: 5px;\\n            display: inline-block;\\n            z-index: 7;\\n\\n            canvas {\\n                position: absolute;\\n                margin-left: -48px;\\n            }\\n\\n            img {\\n                position: relative;\\n                z-index: 15;\\n            }\\n\\n            &[buff=\\\"1\\\"] {\\n                animation: buff 3s ease infinite;\\n                background: linear-gradient(-55deg, transparent, #ffe07c, transparent, #fffd7b);\\n            }\\n            &[buff=\\\"-1\\\"] {\\n                animation: buff 3s ease infinite;\\n                background: linear-gradient(-55deg, transparent, #ff7c7c, transparent, #ffa599);\\n            }\\n        }\\n    }\\n}\\n\\n.effect-tooltip {\\n    width: 325px;\\n    background-color: rgba(0, 0, 0, 0.6);\\n    border-radius: 20px;\\n    border: 4px solid rgba(0, 0, 0, 0.75);\\n    padding-left: 10px;\\n    color: white;\\n    position: absolute;\\n}\\n\\n@keyframes buff {\\n    0% {\\n\\t\\tbackground-position: 0% 50%;\\n\\t}\\n\\t50% {\\n\\t\\tbackground-position: 100% 50%;\\n\\t}\\n\\t100% {\\n\\t\\tbackground-position: 0% 50%;\\n\\t}\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","/**\n * NOTES:\n * \n * - This is the translation file for the fallback.\n * - It must return an object:\n * id: ISSO name of the language, for example en-us,\n * name: name of the language in that language, for example English,\n * author: translator contributor(s) of the language, for example Laptop59,\n * commify: a function that commifies a number (or shortens it)\n * format_building_description: a function that formats descriptions.\n * format_date: a function that formats a date (but not time!!!)\n * translations:\n *      where the KEYS are the translation IDs\n *      and the VALUES are the actual translation for THAT language.\n */\n\nconst TRANSLATION = {\n    \"id\": \"_fb\",\n    \"name\": \"Fallback\",\n    \"author\": \"Laptop59\",\n    \"commify\": function(number: number, br = false, nodot = false): string {\n        if (br) number = Math.floor(number);\n\n        if (!isFinite(number)) return number + \"\";\n        if (number < 0) return \"-\" + TRANSLATION.commify(-number);\n        if (!br && !nodot && number < 10) return number.toFixed(1);\n\n        number = Math.floor(number);\n        return number.toString();\n    },\n    \"format_building_description\": function (\n        description: string,\n        amount: number,\n        rates: [number, number],\n        total: number,\n        buildings: number\n    ) {\n        return \"\";\n    },\n    \"format_date\": function(date: Date): string {\n        const months = [\"January\", \"Feburary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        return months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear();\n    },\n    \"translations\": {}\n};\n\nexport default TRANSLATION;","/**\n * NOTES:\n * \n * - This is the translation file for English.\n * - It must return an object:\n * id: ISSO name of the language, for example en-us,\n * name: name of the language in that language, for example English,\n * author: translator contributor(s) of the language, for example Laptop59,\n * commify: a function that commifies a number (or shortens it)\n * format_building_description: a function that formats descriptions.\n * format_date: a function that formats a date (but not time!!!)\n * translations:\n *      where the KEYS are the translation IDs\n *      and the VALUES are the actual translation for THAT language.\n */\n\nconst TRANSLATION = {\n    \"id\": \"en-us\",\n    \"name\": \"English\",\n    \"author\": \"Laptop59\",\n    \"commify\": function (number: number, br = false, nodot = false): string {\n        if (br) number = Math.floor(number);\n\n        if (!isFinite(number)) return number + \"\";\n        if (number < 0) return \"-\" + TRANSLATION.commify(-number);\n        if (!br && !nodot && number < 10) return number.toFixed(1);\n\n        number = Math.floor(number);\n        if (number < 1000000000) return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n\n        const illion = Math.floor(Math.log10(number) / 3);\n        const starting = Math.pow(10, illion * 3);\n\n        const float = Math.max(Math.floor(number / starting * 1000) / 1000, 1);\n\n        function illionSuffix(illion: number) {\n            if (illion == 100) return \"centillion\";\n            if (illion == 101) return \"uncentillion\";\n            if (illion < 10) {\n                return [\"million\", \"billion\", \"trillion\", \"quadrillion\", \"quintillion\", \"sextillion\", \"septillion\", \"octillion\", \"nonillion\"][illion - 1];\n            }\n            let unit = [\"\", \"un\", \"duo\", \"tre\", \"quattuor\", \"quin\", \"sex\", \"septen\", \"octo\", \"novem\"][illion % 10];\n            let ten = [\"\", \"dec\", \"vigint\", \"trigint\", \"quadragint\", \"quinquagint\", \"sexagint\", \"septuagint\", \"octogint\", \"nonagint\"][Math.floor(illion / 10) % 10];\n            return unit + ten + \"illion\";\n        }\n\n        return float.toFixed(3) + (br ? \"&nbsp;<span>\" : \" \") + illionSuffix(illion - 1) + (br ? \"</span>\" : \"\");\n    },\n    \"format_building_description\": function (\n        description: string,\n        amount: number,\n        rates: [number, number],\n        total: number\n    ) {\n        /**\n         * Converts a tuple of `CPC` and `CPS` respectively to a formatted string.\n         * @param cpccps The tuple.\n         * @param extra Extra info to add at the end, if necessary.\n         * @returns The formatted string.\n         */\n        function convertToEnglish(cpccps: [number, number], extra = \"\") {\n            if (!cpccps) return \"coins\";\n            const [cpc, cps] = cpccps;\n            const parts = []\n            if (cpc > 0) {\n                parts.push(TRANSLATION.commify(cpc, false, true) + \" \" + (cpc === 1 ? \"coin\" : \"coins\") + \" per click\")\n            }\n            if (cps > 0) {\n                parts.push(TRANSLATION.commify(cps, false, true) + \" \" + (cps === 1 ? \"coin\" : \"coins\") + \" per second\")\n            }\n            return \"<b>\" + parts.join(\" and \") + extra + \"</b>\";\n        }\n\n        let each = \"\", so_far = \"\";\n        if (amount > 1) {\n            each = \", each making \" + convertToEnglish(<[number, number]>rates.map(x => x / amount));\n        };\n        if (amount) {\n            so_far = \"<b>&nbsp;\" + this.commify(total) + \" coins made so far.</b>\";\n        }\n\n        return description.replace(\n            \"%1\",\n            convertToEnglish(rates) + each\n        ) + so_far;\n    },\n    \"format_date\": function (date: Date) {\n        const months = [\"January\", \"Feburary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        return months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear();\n    },\n    \"translations\": {\n        ///////////\n        // COINS //\n        ///////////\n\n\n        \"coins.per_click\": \"%1/click\",\n        \"coins.per_second\": \"%1/second\",\n        \"coins.saved\": \"SAVED\",\n\n\n        /////////////\n        // EFFECTS //\n        /////////////\n        // Name\n        \"effects.name.frenzy\": \"Frenzy\",\n        \"effects.name.super_frenzy\": \"Super Frenzy\",\n\n        // Description\n        \"effects.description.frenzy\": \"Increases your production by <b>700%</b>\",\n        \"effects.description.super_frenzy\": \"Increases your production by <b>8,700%</b>\",\n        ///////////////\n        // BUILDINGS //\n        ///////////////\n        \"building.buildings\": \"Buildings\",\n\n        \"building.cursor.singular\": \"Cursor\",\n        \"building.cursors.plural\": \"Cursors\",\n        \"building.cursor.description\": \"Clicks to create %1.\",\n\n        \"building.family.singular\": \"Family Business\",\n        \"building.family.plural\": \"Family Businesses\",\n        \"building.family.description\": \"Works with families to make %1.\",\n\n        \"building.shop.singular\": \"Shop\",\n        \"building.shop.plural\": \"Shops\",\n        \"building.shop.description\": \"Sells basic items making %1.\",\n\n        \"building.bank.singular\": \"Bank\",\n        \"building.bank.plural\": \"Banks\",\n        \"building.bank.description\": \"Uses interest to generate %1.\",\n\n        \"building.carnival.singular\": \"Carnival\",\n        \"building.carnival.plural\": \"Carnivals\",\n        \"building.carnival.description\": \"Sells tickets and souvenirs cashing out %1.\",\n\n        \"building.power_plant.singular\": \"Power Plant\",\n        \"building.power_plant.plural\": \"Power Plants\",\n        \"building.power_plant.description\": \"Generates coin energy to be converted to coins, generating %1 of energy.\",\n\n        \"building.industry.singular\": \"Industry\",\n        \"building.industry.plural\": \"Industries\",\n        \"building.industry.description\": \"Produces coins and smoke, which is converted into more shiny coins, producing %1.\",\n\n        \"building.lab.singular\": \"Technological Lab\",\n        \"building.lab.plural\": \"Technological Labs\",\n        \"building.lab.description\": \"Finds and creates new technology, which all together technologically code in %1.\",\n\n        ///////////\n        // STATS //\n        ///////////\n        \"stats.general_title\": \"General\",\n        \"stats.owned_coins\": \"Coins currently owned: %1%2\",\n        \"stats.total_coins\": \"Total coins made: %1%2\",\n        \"stats.raw_coins_per_click\": \"Raw coins per click: %1%2\",\n        \"stats.raw_coins_per_second\": \"Raw coins per second: %1%2\",\n        \"stats.clicks_done\": \"Clicks done: %1%2\",\n        \"stats.start_date\": \"Start Date: %1\",\n        \"stats.coins_destroyed\": \"Coins Destroyed: %1%2\",\n        \"stats.buildings\": \"Buildings: %1\",\n        \"stats.multiplier\": \"Current multiplier percentage: %1%\",\n        \"stats.achievements_title\": \"Achievements\",\n        \"stats.unlocked_achievements\": \"Achievements unlocked: %1/%2\",\n        \"stats.achievement_multiplier\": \"Achievement multiplier percentage: %1% (each achievement gives +15%)\",\n\n        /////////////\n        // OPTIONS //\n        /////////////\n        \"options.basic_title\": \"Basic\",\n        \"options.game_data_title\": \"Game Data\",\n        \"options.save_to_browser\": \"Save to browser (CTRL+S)\",\n        \"options.autosave\": \"Autosave\",\n\n        \"options.save_game_data.main\": \"Save your game data %1 %2.\",\n        \"options.save_game_data.1\": \"into text\",\n        \"options.save_game_data.2\": \"into a file\",\n\n        \"options.load_game_data.main\": \"Load your game data %1 %2.\",\n        \"options.load_game_data.1\": \"from text\",\n        \"options.load_game_data.2\": \"from a file\",\n\n        \"options.unsafe_title\": \"Unsafe\",\n        \"options.wipe_save\": \"Wipe save\",\n\n\n        /////////////\n        // DIALOGS //\n        ////////////\n\n\n        \"dialogs.ok\": \"OK\",\n\n        \"dialogs.wipe.wipe_save\": \"Wipe Save\",\n        \"dialogs.wipe.warning_1\": \"Are you sure you want to <b style=\\\"color: red;\\\">WIPE THIS SAVE</b>?<br>If you press YES, all your progress, including your coins, achievements and buildings will disappear!\",\n        \"dialogs.wipe.yes\": \"YES!\",\n        \"dialogs.wipe.no\": \"No, cancel this dialog.\",\n        \"dialogs.wipe.warning_2\": \"This action cannot be undone. Are you actually 100% sure?<br><b>Don't forget that this is irreversible!</b><br>You might want to think carefully before clicking YES.\",\n\n        \"dialogs.save.info\": \"Your save code for <b>Coin Clicker</b>:\",\n        \"dialogs.save.title\": \"Save Code\",\n\n        \"dialogs.load.info\": \"Input your save code for <b>Coin Clicker</b>:\",\n        \"dialogs.load.title\": \"Load Code\",\n        \"dialogs.load.load\": \"Load\",\n        \"dialogs.load.cancel\": \"Cancel\",\n\n        \"dialogs.load.haha_nice_try\": \"Haha. Nice try.\",\n        \"dialogs.load.invalid_save_code\": \"Save code is invalid.\",\n\n        \"dialogs.error.fatal_error\": \"Fatal Error\",\n        \"dialogs.error.info\": \"We're really sorry for the inconvience this has caused, but the game has experienced a fatal error.<br><br>Please reload your page.\",\n        \"dialogs.error.reload\": \"Reload\",\n\n\n        //////////////\n        // UPGRADES //\n        //////////////\n        // NAME\n        \"upgrades.name.cursor_1\": \"Calcium cursors\",\n        \"upgrades.name.family_1\": \"Joint families\",\n        \"upgrades.name.shop_1\": \"Advertised shops\",\n        \"upgrades.name.bank_1\": \"Different coloured-coins\",\n        \"upgrades.name.carnival_1\": \"Crazier stunts\",\n        \"upgrades.name.power_plant_1\": \"Coin energy homes\",\n        \"upgrades.name.cursor_2\": \"Silver cursors\",\n        \"upgrades.name.family_2\": \"Shopkeeper families\",\n        \"upgrades.name.shop_2\": \"Megashops\",\n        \"upgrades.name.bank_2\": \"Coin liquid-made vaults\",\n        \"upgrades.name.carnival_2\": \"Extreme-scummy arcade games\",\n        \"upgrades.name.power_plant_2\": \"Coin energized generators\",\n        \"upgrades.name.cursor_3\": \"Crystal clear cursors\",\n        \"upgrades.name.cursor_4\": \"Butterfly cursors\",\n        \"upgrades.name.cursor_5\": \"Autoclick cursors\",\n        \"upgrades.name.cursor_6\": \"Cursors inside cursors\",\n\n        // DESCRIPTION\n        \"upgrades.description.cursor_1\": \"A stronger cursor to click more coins for you.\",\n        \"upgrades.description.family_1\": \"A bigger family to work with you and make more coins for you.\",\n        \"upgrades.description.shop_1\": \"Uses advertisements to sell more items.\",\n        \"upgrades.description.bank_1\": \"Uses different kinds of coins to make more interest.\",\n        \"upgrades.description.carnival_1\": \"Uses more kinds of stunts to cash out more coins.\",\n        \"upgrades.description.power_plant_1\": \"Gives out coin energy to homes using it, generating more fees for coins.\",\n        \"upgrades.description.cursor_2\": \"A shiny cursor which uses its shininess to click more coins.\",\n        \"upgrades.description.family_2\": \"Families to sell more kinds of items for you.\",\n        \"upgrades.description.shop_2\": \"Uses supermarkets without perception of time to sell more items.\",\n        \"upgrades.description.bank_2\": \"Uses liquid coin metal in vaults to generate more coins.\",\n        \"upgrades.description.carnival_2\": \"Cashes out more coins by bankrupting players.\",\n        \"upgrades.description.power_plant_2\": \"Generates more coin energy, used for more generators for the same.\",\n        \"upgrades.description.cursor_3\": \"A very hard diamond cursor which uses its strength to click more coins.\",\n        \"upgrades.description.cursor_4\": \"A cursor which uses butterfly clicking to create more coins.\",\n        \"upgrades.description.cursor_5\": \"A cursor with uses an auto-clicking program to create more coins.\",\n        \"upgrades.description.cursor_6\": \"A cursor which uses a paradox to create more coins.\",\n\n        // USE\n        \"upgrades.upgrades\": \"Upgrades\",\n        \"upgrades.use.cursor_1\": \"<b>Doubles</b> the production of cursors.\",\n        \"upgrades.use.family_1\": \"<b>Triples</b> the production of family businesses.\",\n        \"upgrades.use.shop_1\": \"<b>Triples</b> the production of shops.\",\n        \"upgrades.use.bank_1\": \"<b>Doubles</b> the production of banks.\",\n        \"upgrades.use.carnival_1\": \"<b>Doubles</b> the production of carnivals.\",\n        \"upgrades.use.power_plant_1\": \"<b>Doubles</b> the production of power plants.\",\n        \"upgrades.use.cursor_2\": \"<b>Triples</b> the production of cursors.\",\n        \"upgrades.use.family_2\": \"Shops increase production by <b>+1%</b> for every family business.<br><b>Multiplies</b> the production of family businesses <b>by 10</b>.\",\n        \"upgrades.use.shop_2\": \"<b>Multiplies</b> the production of shops <b>by 5</b>.\",\n        \"upgrades.use.bank_2\": \"<b>Multiplies</b> the production of banks <b>by 7</b>.\",\n        \"upgrades.use.carnival_2\": \"<b>Triples</b> the production of carnivals.\",\n        \"upgrades.use.power_plant_2\": \"<b>Triples</b> the production of power plants.\",\n        \"upgrades.use.cursor_3\": \"<b>Multiplies</b> the production of cursors <b>by 8</b>.\",\n        \"upgrades.use.cursor_4\": \"Every non-cursor building grants <b>+1% more</b> the production of cursors.\",\n        \"upgrades.use.cursor_5\": \"Every non-cursor building grants <b>+2% more</b> the production of cursors, for a total of <b>+3.02%</b>.\",\n        \"upgrades.use.cursor_6\": \"Every non-cursor building grants <b>+3% more</b> the production of cursors, for a total of <b>+6.11%</b>.\",\n\n        //////////////////\n        // ACHIEVEMENTS //\n        //////////////////\n        // CATEGORY (IN GENERAL)\n        \"achievements.categories.count\": \"Achievements Unlocked: %1/%2\",\n\n        // CATEGORY TITLES\n        \"achievements.category.total_coins\": \"Total coins\",\n        \"achievements.category.cps\": \"Coins per second\",\n        \"achievements.category.building_milestones\": \"Building milestones\",\n        \"achievements.category.clicks\": \"Click\",\n        \"achievements.category.destruction\": \"Destruction\",\n\n        // NAME\n        \"achievements.name.total_coins_1\": \"Shiny yellow ovals\",\n        \"achievements.name.total_coins_2\": \"Some bank\",\n        \"achievements.name.total_coins_3\": \"Maybe a few more\",\n        \"achievements.name.total_coins_4\": \"Need more piggy banks\",\n        \"achievements.name.total_coins_5\": \"Basically a trillicoinaire\",\n        \"achievements.name.total_coins_6\": \"I wonder if I can deposit them\",\n        \"achievements.name.total_coins_7\": \"Even the marine life need money, y'know\",\n        \"achievements.name.total_coins_8\": \"The golden coin\",\n        \"achievements.name.total_coins_9\": \"When the coins stack to the moon\",\n        \"achievements.name.total_coins_10\": \"Wishing for more coins\",\n        \"achievements.name.total_coins_11\": \"The world is a pocket-sized sun\",\n        \"achievements.name.cps_1\": \"Some serious bank(s)\",\n        \"achievements.name.cps_2\": \"Stack like chips\",\n        \"achievements.name.cps_3\": \"The biggest game of checkers\",\n        \"achievements.name.cps_4\": \"Sells like hot coins, not cakes\",\n        \"achievements.name.cps_5\": \"Gold is old\",\n        \"achievements.name.cps_6\": \"Who cares about cash\",\n        \"achievements.name.cps_7\": \"Doing laundry? Please insert 1 million coins to continue\",\n        \"achievements.name.cps_8\": \"It's raining <b>COINS</b>\",\n        \"achievements.name.cps_9\": \"The sun is a giant hydrogen flaming coin\",\n        \"achievements.name.cps_10\": \"The atoms are getting beaten\",\n        \"achievements.name.cps_11\": \"What even is life anymore?\",\n        \"achievements.name.clicks_1\": \"Left click\",\n        \"achievements.name.clicks_2\": \"Click click click\",\n        \"achievements.name.clicks_3\": \"Don't you dare use keys for clicking\",\n        \"achievements.name.clicks_4\": \"Autoclickers have a bad side\",\n        \"achievements.name.clicks_5\": \"Put the coins in the bag\",\n        \"achievements.name.buildings_1\": \"Coinstruction\",\n        \"achievements.name.buildings_2\": \"Building with coins\",\n        \"achievements.name.buildings_3\": \"Will these fall and get demolished?\",\n        \"achievements.name.buildings_4\": \"An entire coin city\",\n        \"achievements.name.buildings_5\": \"100% pure coins\",\n        \"achievements.name.buildings_6\": \"Building is my hobby\",\n        \"achievements.name.destroy_1\": \"What the fell?\",\n        \"achievements.name.destroy_2\": \"Just stop!\",\n        \"achievements.name.destroy_3\": \"Serial destroyer\",\n        \"achievements.name.destroy_orange\": \"No way..? Is it magic??\",\n        \"achievements.name.destroy_orange_super\": \"WAAOOOOOOOOOOOOOO\",\n\n        // DESCRIPTION\n        \"achievements.description.total_coins_1\": \"Some shiny ovals... maybe I should collect more!\",\n        \"achievements.description.total_coins_2\": \"These cost pennies\",\n        \"achievements.description.total_coins_3\": \"I NEED MORE\",\n        \"achievements.description.total_coins_4\": \"<i>Hello, is this Piggy Service? Yes, I need 10,000 more piggy banks! What do you mean they are sold out?</i>\",\n        \"achievements.description.total_coins_5\": \"<b>NEWS:</b> Hundreds of cursors start appearing out of thin air!\",\n        \"achievements.description.total_coins_6\": \"Trying to search for a bank that will keep your stupid amount of coins? Well, don't look furthe--OW! That hurt!\",\n        \"achievements.description.total_coins_7\": \"<b>NEWS:</b> Some person is dumping millions of coins into the ocean for some reason. I think the person is moving there or something.\",\n        \"achievements.description.total_coins_8\": \"This coin is the most praised coin in the world, dubbed the <b>GOLDEN COIN</b>!\",\n        \"achievements.description.total_coins_9\": \"Who needs rockets when you have coins?\",\n        \"achievements.description.total_coins_10\": \"<b>NEWS:</b> People are using oceans as wishing wells for cool stuff, like leprechauns!\",\n        \"achievements.description.total_coins_11\": \"According to the <i>Coin Astronomy Organization</i>, even the Sun can't outlast the Earth's shininess!\",\n        \"achievements.description.cps_1\": \"By serious bank, I mean actual BANKS!\",\n        \"achievements.description.cps_2\": \"Don't use them in casinos!\",\n        \"achievements.description.cps_3\": \"How long would a game like this take to end, and build? Not to mention painting half of them!\",\n        \"achievements.description.cps_4\": \"This is not a bakery, ok? This is a mint...\",\n        \"achievements.description.cps_5\": \"Don't even think about melting these and starting a foundry!\",\n        \"achievements.description.cps_6\": \"Cash is trash, because it rhymes!\",\n        \"achievements.description.cps_7\": \"You think that's bad? A vending machine asks for exactly 1 billion 234 million 567 thousand 890 coins! Don't even get me started on an arcade game...\",\n        \"achievements.description.cps_8\": \"Some guy paid the clouds to drop millions of coins from the sky, and I don't know why, but maybe he just wanted to do a giveaway!\",\n        \"achievements.description.cps_9\": \"Is this mythology?\",\n        \"achievements.description.cps_10\": \"<b>NEWS:</b> Everything in the observable universe is turning to <i>COIN MATTER-IAL</i>!\",\n        \"achievements.description.cps_11\": \"All I can think about are coins, coins, and more coins... Was this a bad idea?\",\n        \"achievements.description.clicks_1\": \"Oh, casually clicking the big coin, huh?\",\n        \"achievements.description.clicks_2\": \"The big coin doesn't like your thinking...\",\n        \"achievements.description.clicks_3\": \"Used <b>Click</b>! It's not very effective... Dealt <sub><sub>0.000000001</sub>% of damage!</sub>\",\n        \"achievements.description.clicks_4\": \"The big coin is constantly getting troubled.\",\n        \"achievements.description.clicks_5\": \"Hi, big coin! This is a robbery! <b>NOW GIVE ME YOUR COINS <b>OR ELSE</b></b>\",\n        \"achievements.description.buildings_1\": \"Wait. How do family businesses get constructed?\",\n        \"achievements.description.buildings_2\": \"WE ARE LITERALLY BUILDING WITH COINS!\",\n        \"achievements.description.buildings_3\": \"Who knows...\",\n        \"achievements.description.buildings_4\": \"It is 5,000 miles away from my location... FAAAA-\",\n        \"achievements.description.buildings_5\": \"Hey guys! I recently found this new country, called <i>Coinice</i>! You should check it out!\",\n        \"achievements.description.buildings_6\": \"The buildings are building the buildings which are building buildings which are also building buildings which are themselves also building buildings which are also themselves building buildings which are also themselves building buildings which are also themselves building buildings which are also themselves building buildings which are also building buildings, that are building building builders!\",\n        \"achievements.description.destroy_1\": \"What happened to that coin???\",\n        \"achievements.description.destroy_2\": \"You're being a menace to these coins.<br><b>NEWS:</b> 15 coins missing without a trace!\",\n        \"achievements.description.destroy_3\": \"Oh well, you probably produce more coins than what you destroy.\",\n        \"achievements.description.destroy_orange\": \"Did the coin gods take the sacifice to reward...us?\",\n        \"achievements.description.destroy_orange_super\": \"Are we worthy?\",\n\n        // HOW\n        \"achievements.how.total_coins_1\": \"Make a total of <b>100 coins</b>.\",\n        \"achievements.how.total_coins_2\": \"Make a total of <b>10,000 coins</b>.\",\n        \"achievements.how.total_coins_3\": \"Make a total of <b>1,000,000 coins</b>.\",\n        \"achievements.how.total_coins_4\": \"Make a total of <b>1 billion coins</b>.\",\n        \"achievements.how.total_coins_5\": \"Make a total of <b>1 trillion coins</b>.\",\n        \"achievements.how.total_coins_6\": \"Make a total of <b>1 quadrillion coins</b>.\",\n        \"achievements.how.total_coins_7\": \"Make a total of <b>1 quintillion coins</b>.\",\n        \"achievements.how.total_coins_8\": \"Make a total of <b>1 sextillion coins</b>.\",\n        \"achievements.how.total_coins_9\": \"Make a total of <b>1 septillion coins</b>.\",\n        \"achievements.how.total_coins_10\": \"Make a total of <b>1 octillion coins</b>.\",\n        \"achievements.how.total_coins_11\": \"Make a total of <b>1 nonillion coins</b>.\",\n        \"achievements.how.cps_1\": \"Make a <i>raw</i> <b>500 coins</b> per second.\",\n        \"achievements.how.cps_2\": \"Make a <i>raw</i> <b>50,000 coins</b> per second.\",\n        \"achievements.how.cps_3\": \"Make a <i>raw</i> <b>5,000,000 coins</b> per second.\",\n        \"achievements.how.cps_4\": \"Make a <i>raw</i> <b>500,000,000 coins</b> per second.\",\n        \"achievements.how.cps_5\": \"Make a <i>raw</i> <b>50 billion coins</b> per second.\",\n        \"achievements.how.cps_6\": \"Make a <i>raw</i> <b>5 trillion coins</b> per second.\",\n        \"achievements.how.cps_7\": \"Make a <i>raw</i> <b>5 quadrillion coins</b> per second.\",\n        \"achievements.how.cps_8\": \"Make a <i>raw</i> <b>5 quintillion coins</b> per second.\",\n        \"achievements.how.cps_9\": \"Make a <i>raw</i> <b>5 sextillion coins</b> per second.\",\n        \"achievements.how.cps_10\": \"Make a <i>raw</i> <b>5 septillion coins</b> per second.\",\n        \"achievements.how.cps_11\": \"Make a <i>raw</i> <b>5 octillion coins</b> per second.\",\n        \"achievements.how.clicks_1\": \"Click the big coin <b>100</b> times.\",\n        \"achievements.how.clicks_2\": \"Click the big coin <b>500</b> times.\",\n        \"achievements.how.clicks_3\": \"Click the big coin <b>1,000</b> times.\",\n        \"achievements.how.clicks_4\": \"Click the big coin <b>2,500</b> times.\",\n        \"achievements.how.clicks_5\": \"Click the big coin <b>5,000</b> times.\",\n        \"achievements.how.buildings_1\": \"Have a total of <b>50</b> buildings.\",\n        \"achievements.how.buildings_2\": \"Have a total of <b>100</b> buildings.\",\n        \"achievements.how.buildings_3\": \"Have a total of <b>200</b> buildings.\",\n        \"achievements.how.buildings_4\": \"Have a total of <b>300</b> buildings.\",\n        \"achievements.how.buildings_5\": \"Have a total of <b>400</b> buildings.\",\n        \"achievements.how.buildings_6\": \"Have a total of <b>500</b> buildings.\",\n        \"achievements.how.destroy_1\": \"Destroy <b>a falling coin</b>.\",\n        \"achievements.how.destroy_2\": \"Destroy <b>15 falling coins</b>.\",\n        \"achievements.how.destroy_3\": \"Destroy <b>75 falling coins</b>.\",\n        \"achievements.how.destroy_orange\": \"Destroy an <b>orange coin</b>.\",\n        \"achievements.how.destroy_orange_super\": \"Destroy an <b>orange coin</b> and get the <b>super frenzy</b> effect.\"\n    }\n};\n\nexport default TRANSLATION;","var map = {\n\t\"./_fb.ts\": 605,\n\t\"./en_us.ts\": 924\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 321;","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","// Utilty functions relating to selectors.\n\n/**\n * Find the first element based on a selector.\n * @param selector Selector used to find.\n * @param node Optional node to search from instead of `document`.\n * @returns The first that satisifies the selector.\\\n * Note: *If none are found, an error is thrown.*\n */\nfunction selector(selector: string, node?: Element) {\n    const elem = (node ?? document).querySelector(selector);\n    if (!elem) throw new Error(\"Could not find an element that satisifies this selector: \" + selector);\n    return elem;\n}\n\n/**\n * Find all elements based on a selector.\n * @param selector Selector used to find.\n * @param node Optional node to search from instead of `document`.\n * @returns All that satisifies the selector.\n */\nfunction selectorAll(selector: string, node?: Element) {\n    return (node ?? document).querySelectorAll(selector);\n}\n\n/**\n * Asserts a value\n * @param value Value to assert.\n * @returns The value itself. If the value is `falsy`, an error is thrown.\n */\nfunction assert(value: any) {\n    if (!value) throw new Error(\"Assertion failed: \" + value);\n    return value;\n}\n\nexport { selector, selectorAll, assert };","// Define all our buildings.\n\n/**\n * Describes a building.\n */\ninterface Building {\n    /**\n     * The ID of the building.\n     */\n    id: string,\n\n    /**\n     * The benefits of having 1 of the building;\n     * \n     * `[(number of coins earned per click), (number of coins earned per second)]`\n     */\n    benefits: [number, number],\n\n    /**\n     * The base cost of the building.\n     */\n    cost: number,\n\n    /**\n     * The multiplier of the cost based on how many building owned. It is multiplied for each building owned to the base cost to find the final cost.\n     */\n    increase: number,\n\n    /**\n     * The icon array of the building.\n     */\n    icon: [number, number]\n}\n\n/**\n * Defined buildings of the game.\n */\nconst buildings: Building[] = [\n    {\n        \"id\": \"cursor\",\n        \"benefits\": [1, 0], // first for click, second for /second.\n        \"cost\": 15,\n        \"increase\": 1.2,\n        \"icon\": [0, 1]\n    },\n    {\n        \"id\": \"family\",\n        \"benefits\": [0, 25],\n        \"cost\": 200,\n        \"increase\": 1.21,\n        \"icon\": [0, 2]\n    },\n    {\n        \"id\": \"shop\",\n        \"benefits\": [0, 450],\n        \"cost\": 12000,\n        \"increase\": 1.22,\n        \"icon\": [0, 3]\n    },\n    {\n        \"id\": \"bank\",\n        \"benefits\": [750, 0],\n        \"cost\": 95000,\n        \"increase\": 1.23,\n        \"icon\": [0, 5]\n    },\n    {\n        \"id\": \"carnival\",\n        \"benefits\": [0, 5500],\n        \"increase\": 1.24,\n        \"cost\": 1350000,\n        \"icon\": [0, 6]\n    },\n    {\n        \"id\": \"power_plant\",\n        \"benefits\": [0, 65000],\n        \"increase\": 1.25,\n        \"cost\": 11000000,\n        \"icon\": [0, 7]\n    },\n    {\n        \"id\": \"industry\",\n        \"benefits\": [0, 475000],\n        \"increase\": 1.26,\n        \"cost\": 175000000,\n        \"icon\": [0, 8]\n    },\n    {\n        \"id\": \"lab\",\n        \"benefits\": [100000, 3000000],\n        \"increase\": 1.27,\n        \"cost\": 7250000000,\n        \"icon\": [0, 9]\n    }\n]\n\nexport {\n    buildings as default,\n    Building\n}","// Tiers\n// 1: 5   buildings\n// 2: 15  buildings\n// 3: 35  buildings\n// 4: 50  buildings\n// 5: 75  buildings\n// 6: 100 buildings\n// 7: 150 buildings\n// 8: 200 buildings\n// 9: 250 buildings\n//10: 300 buildings\n\nimport Game from \"./Game\";\n\n/**\n * The benefits that are given out by an upgrade when bought.\n */\ninterface Benefits {\n    /**\n     * A function that takes in certain parameters which outputs new rates of coins generated by the building.\n     */\n    [key: string]: (\n        coins: number,\n        isCoinsPerSec: boolean,\n        game: Game\n    ) => number,\n}\n\n/**\n * The requirements to unlock the upgrade so that it can be bought.\n */\ninterface Requirements {\n    /**\n     * Describes how many of a particular building is required.\n     */\n    [key: string]: number\n}\n\n/**\n * A upgrade that exists in game.\n */\ninterface Upgrade {\n    /**\n     * The ID of the upgrade.\n     */\n    id: string,\n\n    /**\n     * The cost of the upgrade in coins.\n     */\n    cost: number,\n\n    /**\n     * The benefits caused by the upgrade.\n     */\n    benefits: Benefits,\n\n    /**\n     * The requirements required to buy the upgrade.\n     */\n    requirements: Requirements,\n\n    /**\n     * The icon of the upgrade.\n     */\n    icon: [number, number]\n}\n\n/**\n * Upgrades of the game (mostly for buildings)\n */\nconst upgrades: Upgrade[] = [\n    {\n        \"id\": \"cursor_1\",\n        \"cost\": 100,\n        \"benefits\": {\n            cursor: x => x * 2\n        },\n        \"requirements\": {cursor: 5},\n        \"icon\": [0, 1]\n    },\n    {\n        \"id\": \"family_1\",\n        \"cost\": 1500,\n        \"benefits\": {\n            family: x => x * 3\n        },\n        \"requirements\": {family: 5},\n        \"icon\": [0, 2]\n    },\n    {\n        \"id\": \"shop_1\",\n        \"cost\": 15000,\n        \"benefits\": {\n            shop: x => x * 3\n        },\n        \"requirements\": {shop: 5},\n        \"icon\": [0, 3]\n    },\n    {\n        \"id\": \"bank_1\",\n        \"cost\": 850000,\n        \"benefits\": {\n            bank: x => x * 2\n        },\n        \"requirements\": {bank: 5},\n        \"icon\": [0, 5]\n    },\n    {\n        \"id\": \"carnival_1\",\n        \"cost\": 7500000,\n        \"benefits\": {\n            carnival: x => x * 2\n        },\n        \"requirements\": {carnival: 5},\n        \"icon\": [0, 6]\n    },\n    {\n        \"id\": \"power_plant_1\",\n        \"cost\": 40000000,\n        \"benefits\": {\n            power_plant: x => x * 2\n        },\n        \"requirements\": {power_plant: 5},\n        \"icon\": [0, 7]\n    },\n    {\n        \"id\": \"cursor_2\",\n        \"cost\": 750,\n        \"benefits\": {\n            cursor: x => x * 3\n        },\n        \"requirements\": {cursor: 15},\n        \"icon\": [1, 1]\n    },\n    {\n        \"id\": \"family_2\",\n        \"cost\": 350000,\n        \"benefits\": {\n            family: x => x * 10,\n            shop: (x, _, game) => x * (1 + game.getNumberOfBuildings('family') / 100)\n        },\n        \"requirements\": {family: 15},\n        \"icon\": [1, 2]\n    },\n    {\n        \"id\": \"shop_2\",\n        \"cost\": 400000,\n        \"benefits\": {\n            shop: x => x * 5\n        },\n        \"requirements\": {shop: 15},\n        \"icon\": [1, 3]\n    },\n    {\n        \"id\": \"bank_2\",\n        \"cost\": 7000000,\n        \"benefits\": {\n            bank: x => x * 7\n        },\n        \"requirements\": {bank: 15},\n        \"icon\": [1, 5]\n    },\n    {\n        \"id\": \"carnival_2\",\n        \"cost\": 25000000,\n        \"benefits\": {\n            carnival: x => x * 3\n        },\n        \"requirements\": {carnival: 15},\n        \"icon\": [1, 6]\n    },\n    {\n        \"id\": \"power_plant_2\",\n        \"cost\": 300000000,\n        \"benefits\": {\n            power_plant: x => x * 3\n        },\n        \"requirements\": {power_plant: 15},\n        \"icon\": [1, 7]\n    },\n    {\n        \"id\": \"cursor_3\",\n        \"cost\": 65000,\n        \"benefits\": {\n            cursor: x => x * 8\n        },\n        \"requirements\": {cursor: 35},\n        \"icon\": [2, 1]\n    },\n    {\n        \"id\": \"cursor_4\",\n        \"cost\": 4000000,\n        \"benefits\": {\n            cursor: (x, _, game) => x * (1 + game.getTotalBuildings(true) / 100)\n        },\n        \"requirements\": {cursor: 50},\n        \"icon\": [3, 1]\n    },\n    {\n        \"id\": \"cursor_5\",\n        \"cost\": 35000000,\n        \"benefits\": {\n            cursor: (x, _, game) => x * (1 + game.getTotalBuildings(true) / 50)\n        },\n        \"requirements\": {cursor: 75},\n        \"icon\": [4, 1]\n    },\n    {\n        \"id\": \"cursor_6\",\n        \"cost\": 200000000,\n        \"benefits\": {\n            cursor: (x, _, game) => x * (1 + game.getTotalBuildings(true) / 100 * 3)\n        },\n        \"requirements\": {cursor: 100},\n        \"icon\": [5, 1]\n    },\n];\n\nexport {\n    upgrades as default,\n    Upgrade\n};","import Game from \"./Game\";\n\n/**\n * Describles a type of the effect.\n */\nenum EffectType {\n    FRENZY = 'frenzy',\n    SUPER_FRENZY = 'super_frenzy'\n}\n\n/**\n * A class that represents an effect.\n */\nclass Effect {\n    /**\n     * The type of the effect.\n     */\n    type: EffectType;\n\n    /**\n     * The duration of the effect in seconds.\n     */\n    duration: number;\n\n    /**\n     * A reference to the game object.\n     */\n    game: Game;\n\n    /**\n     * Creates a new effect.\n     * @param type The type of the effect.\n     * @param duration The duration of the effect (max). Can be null for automatic infering of max duration.\n     * @param game A reference to the game object.\n     */\n    constructor(type: EffectType, duration: number | null = null, game: Game) {\n        this.type = type;\n        this.duration = duration || this.maxDuration;\n        this.game = game;\n    }\n\n    /**\n     * This getter function is called to infer the max duration.\n     */\n    get maxDuration() {\n        switch (this.type) {\n            case EffectType.FRENZY:\n                return 15;\n            case EffectType.SUPER_FRENZY:\n                return 10;\n        }\n    }\n\n    /**\n     * Function called to tick the effect.\n     * @param delta Amount of time in seconds passed since last time.\n     */\n    tick(delta: number) {\n        this.duration -= delta;\n    }\n\n    /**\n     * Effect multiplier due to the effect.\n     * @returns The multiplier made by the effect.\n     */\n    getEffect(): number {\n        if (this.expired) return 1;\n\n        switch (this.type) {\n            case EffectType.FRENZY:\n                return 8;\n\n            case EffectType.SUPER_FRENZY:\n                return 88;\n        }\n    }\n\n    /**\n     * The icon of the effect.\n     * @returns Icon of the effect.\n     */\n    getIcon(): [number, number] {\n        switch (this.type) {\n            case EffectType.FRENZY:\n                return [0, 0];\n            \n            case EffectType.SUPER_FRENZY:\n                return [1, 0];\n        }\n    }\n\n    /**\n     * The information about the effect.\n     * @returns Information about the effect.\\\n     * `[(name of the effect displayed), (description of the effect)]`\n     */\n    getMeta(): [string, string] {\n        return [\n            \"effects.name.\" + this.type,\n            \"effects.description.\" + this.type\n        ];\n    }\n\n    /**\n     * Percentage duration of the effect in the interval [0,1]\n     */\n    get percentageDuration() {\n        return this.duration / this.maxDuration;\n    }\n\n    /**\n     * Property to check if the effect has expired.\n     */\n    get expired() {\n        return this.duration <= 0;\n    }\n}\n\nexport {\n    Effect as default,\n    EffectType\n}","import { EffectType } from \"./Effect\";\nimport Game from \"./Game\";\n\n/**\n * Describes an achievement.\n */\ninterface Achievement {\n    /**\n     * The ID of the achievement.\n     */\n    id: string,\n\n    /**\n     * A function that returns if its achievement should be achieved.\n     * @param game Game object.\n     * @returns Whether the achievement should be achieved.\n     */\n    goal: (game: Game) => boolean,\n\n    /**\n     * Icon array of the achievement.\n     */\n    icon: [number, number]\n};\n\n/**\n * Describles a category of achievement(s).\n */\ninterface CategorizedAchievements {\n    [key: string]: Achievement[]\n};\n\n/**\n * All existing categorised achievements ingame.\n */\nconst categorizedAchievements: CategorizedAchievements = {\n    // Total Coins\n    total_coins: [\n        {\n            id: \"total_coins_1\",\n            goal: game => game.totalCoins >= 100,\n            icon: [0, 0]\n        },\n        {\n            id: \"total_coins_2\",\n            goal: game => game.totalCoins >= 10000,\n            icon: [1, 0]\n        },\n        {\n            id: \"total_coins_3\",\n            goal: game => game.totalCoins >= 1000000,\n            icon: [2, 0]\n        },\n        {\n            id: \"total_coins_4\",\n            goal: game => game.totalCoins >= 1e9,\n            icon: [3, 0]\n        },\n        {\n            id: \"total_coins_5\",\n            goal: game => game.totalCoins >= 1e12,\n            icon: [4, 0]\n        },\n        {\n            id: \"total_coins_6\",\n            goal: game => game.totalCoins >= 1e15,\n            icon: [5, 0]\n        },\n        {\n            id: \"total_coins_7\",\n            goal: game => game.totalCoins >= 1e18,\n            icon: [6, 0]\n        },\n        {\n            id: \"total_coins_8\",\n            goal: game => game.totalCoins >= 1e21,\n            icon: [7, 0]\n        },\n        {\n            id: \"total_coins_9\",\n            goal: game => game.totalCoins >= 1e24,\n            icon: [8, 0]\n        },\n        {\n            id: \"total_coins_10\",\n            goal: game => game.totalCoins >= 1e27,\n            icon: [9, 0]\n        },\n        {\n            id: \"total_coins_11\",\n            goal: game => game.totalCoins >= 1e30,\n            icon: [10, 0]\n        },\n    ],\n    // Coins per second\n    cps: [\n        {\n            id: \"cps_1\",\n            goal: game => game.rawCoinsPerSec >= 500,\n            icon: [0, 0]\n        },\n        {\n            id: \"cps_2\",\n            goal: game => game.rawCoinsPerSec >= 50000,\n            icon: [1, 0]\n        },\n        {\n            id: \"cps_3\",\n            goal: game => game.rawCoinsPerSec >= 5e6,\n            icon: [2, 0]\n        },\n        {\n            id: \"cps_4\",\n            goal: game => game.rawCoinsPerSec >= 5e8,\n            icon: [3, 0]\n        },\n        {\n            id: \"cps_5\",\n            goal: game => game.rawCoinsPerSec >= 5e10,\n            icon: [4, 0]\n        },\n        {\n            id: \"cps_6\",\n            goal: game => game.rawCoinsPerSec >= 5e12,\n            icon: [5, 0]\n        },\n        {\n            id: \"cps_7\",\n            goal: game => game.rawCoinsPerSec >= 5e15,\n            icon: [6, 0]\n        },\n        {\n            id: \"cps_8\",\n            goal: game => game.rawCoinsPerSec >= 5e18,\n            icon: [7, 0]\n        },\n        {\n            id: \"cps_9\",\n            goal: game => game.rawCoinsPerSec >= 5e21,\n            icon: [8, 0]\n        },\n        {\n            id: \"cps_10\",\n            goal: game => game.rawCoinsPerSec >= 5e24,\n            icon: [9, 0]\n        },\n        {\n            id: \"cps_11\",\n            goal: game => game.rawCoinsPerSec >= 5e27,\n            icon: [10, 0]\n        },\n    ],\n    // Clicks\n    clicks: [\n        {\n            id: \"clicks_1\",\n            goal: game => game.clicks >= 100,\n            icon: [0, 1]\n        },\n        {\n            id: \"clicks_2\",\n            goal: game => game.clicks >= 500,\n            icon: [1, 1]\n        },\n        {\n            id: \"clicks_3\",\n            goal: game => game.clicks >= 1000,\n            icon: [2, 1]\n        },\n        {\n            id: \"clicks_4\",\n            goal: game => game.clicks >= 2500,\n            icon: [3, 1]\n        },\n        {\n            id: \"clicks_5\",\n            goal: game => game.clicks >= 5000,\n            icon: [4, 1]\n        },\n    ],\n    // Buildings\n    building_milestones: [\n        {\n            id: \"buildings_1\",\n            goal: game => game.buildingsNumber >= 50,\n            icon: [1, 4]\n        },\n        {\n            id: \"buildings_2\",\n            goal: game => game.buildingsNumber >= 100,\n            icon: [2, 4]\n        },\n        {\n            id: \"buildings_3\",\n            goal: game => game.buildingsNumber >= 200,\n            icon: [3, 4]\n        },\n        {\n            id: \"buildings_4\",\n            goal: game => game.buildingsNumber >= 300,\n            icon: [4, 4]\n        },\n        {\n            id: \"buildings_5\",\n            goal: game => game.buildingsNumber >= 400,\n            icon: [5, 4]\n        },\n        {\n            id: \"buildings_6\",\n            goal: game => game.buildingsNumber >= 500,\n            icon: [6, 4]\n        },\n    ],\n    // Destruction\n    destruction: [\n        {\n            id: \"destroy_1\",\n            goal: game => game.coinsDestroyed >= 1,\n            icon: [0, 0]\n        },\n        {\n            id: \"destroy_2\",\n            goal: game => game.coinsDestroyed >= 15,\n            icon: [2, 0]\n        },\n        {\n            id: \"destroy_3\",\n            goal: game => game.coinsDestroyed >= 75,\n            icon: [4, 0]\n        },\n        {\n            id: 'destroy_orange',\n            goal: game => game.hasEffect(EffectType.FRENZY) || game.hasEffect(EffectType.SUPER_FRENZY),\n            icon: [1, 0]\n        },\n        {\n            id: 'destroy_orange_super',\n            goal: game => game.hasEffect(EffectType.SUPER_FRENZY),\n            icon: [2, 0]\n        }\n    ],\n}\n\nlet achievements: Achievement[] = [];\n\nfor (let c of Object.values(categorizedAchievements)) {\n    achievements = achievements.concat(c);\n}\n\nexport {\n    categorizedAchievements as default,\n    achievements,\n    Achievement\n};","import CoinImager from \"./CoinImager\";\nimport { EffectType } from \"./Effect\";\nimport Game from \"./Game\";\n\nenum FallingCoinType {\n    YELLOW = \"yellow\",\n    ORANGE = \"orange\",\n}\n\n/**\n * This class describes a falling coin in the canvas.\n */\nclass FallingCoin {\n    /**\n     * The x-position of the coin.\n     */\n    x: number = 0;\n\n    /**\n     * The y-position of the coin.\n     */\n    y: number = -200;\n\n    // 0.95 to 1.25\n    // 0.95 + 0.3 * R\n\n    /**\n     * The size of the coin, in the interval [0.95,1.25)\n     */\n    s: number = 0.95 + Math.random() * 0.3\n\n    /**\n     * The rotation of the coin in radians.\n     */\n    rotation: number = Math.random() * 2 * Math.PI;\n\n    /**\n     * A reference to the canvas.\n     */\n    canvas: HTMLCanvasElement;\n\n    /**\n     * A reference to the context of the canvas.\n     */\n    ctx: CanvasRenderingContext2D;\n\n    /**\n     * A reference image of the coin.\n     */\n    ci: HTMLImageElement;\n\n    /**\n     * The type of the coin.\n     */\n    id: FallingCoinType = FallingCoinType.YELLOW;\n\n    /**\n     * The destruction-state of the coin (usually in the range [0, 10]).\n     */\n    destroy: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 = 0;\n\n    /**\n     * A reference to the current game.\n     */\n    game: Game;\n\n    /**\n     * Creates a new `FallingCoin`.\n     * @param canvas A reference to the canvas it will be drawn in.\n     * @param imager A reference to a `CoinImager`, a storehouse of coin images.\n     * @param game A reference to the current game.\n     */\n    constructor (canvas: HTMLCanvasElement, imager: CoinImager, game: Game) {\n        this.x = Math.random();\n        this.canvas = canvas;\n        this.ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n        this.game = game;\n\n        this.setSpecial();\n        this.ci = <HTMLImageElement>imager.getImage(this.id)\n    }\n\n    /**\n     * Sets the specialty of the coin based on RNG.\n     */\n    setSpecial() {\n        const num = Math.random() * 100;\n        if (num < 0.75) this.id = FallingCoinType.ORANGE;\n    }\n\n    /**\n     * Draws the coin in the canvas. It also may increase `destroy` by 1.\n     */\n    draw() {\n        this.ctx.globalAlpha = this.alpha;\n        const xs = 55;\n        const ys = 60;\n        let xOffset = this.realX + (xs/2) * this.s;\n        let yOffset = this.y + (ys/2) * this.s;\n        this.ctx.save()\n        this.ctx.translate(xOffset, yOffset)\n        this.ctx.rotate(this.rotation);\n        this.ctx.translate(-xOffset, -yOffset)\n        this.ctx.drawImage(this.ci, this.realX, this.y, xs * this.is, ys * this.is);\n        this.ctx.rotate(-this.rotation);\n        this.ctx.restore();\n        if (this.destroy !== 1) this.destroy -= 1;\n    }\n\n    /**\n     * Make the coin fall and rotate.\n     * @param delta Time passed since last time.\n     */\n    fall(delta: number) {\n        this.y += delta / 7;\n        this.rotation += delta / 100;\n    }\n    \n    /**\n     * Tells if the coin can be touched at a point.\n     * @param x x-position of the point.\n     * @param y y-position of the point.\n     * @returns Whether they are touching.\\\n     * Note: *This will return `false` if it is getting destroyed.*\n     */\n    isTouching(x: number, y: number) {\n        if (this.destroy > 0) return false;\n        const X = x - this.realX;\n        const Y = y - this.y;\n\n        const YS = 60 * this.s;\n\n        return X*X + Y*Y < YS*YS;\n    }\n\n    /**\n     * Touches the coin.\n     */\n    click() {\n        this.destroy = 10;\n\n        switch (this.id) {\n            case FallingCoinType.ORANGE:\n                if (Math.random() < 0.05) {\n                    this.game.addEffect(EffectType.SUPER_FRENZY)\n                } else {\n                    this.game.addEffect(EffectType.FRENZY)\n                }\n                break;\n        }\n    }\n\n    /**\n     * Gets the actual x-position of the coin, which is used to draw.\n     */\n    get realX() {\n        return this.x * this.canvas.width;\n    }\n\n    /**\n     * The animating size of the coin.\n     */\n    get is() {\n        if (this.destroy <= 0) return this.s;\n        return this.s * ((10 - this.destroy) / 10 + 1)\n    }\n\n    /**\n     * Gets the alpha the coin needs to be drawn in.\n     */\n    get alpha() {\n        if (this.destroy <= 0) return 1;\n        return (this.destroy - 1) / 10;\n    }\n}\n\nexport default FallingCoin;","import Effect, { EffectType } from \"./Effect\";\nimport Game from \"./Game\";\n\n/**\n * An object that represents all the necessary information of a save.\n */\ninterface SaveObject {\n    /**\n     * The number of coins owned at the time of save.\n     */\n    coins: number,\n\n    /**\n     * The total number of coins made at the time of save.\n     */\n    totalCoins: number,\n\n    /**\n     * The amount of each building owned by the player at the time of save.\n     */\n    buildings: {[key: string]: number},\n\n    /**\n     * The bought upgrades at the time of save.\n     */\n    bought: string[],\n\n    /**\n     * The achievements achieved by the player at the time of save.\n     */\n    achievements: string[],\n\n    /**\n     * The total number of coins made from each building.\n     */\n    total: {[key: string]: number},\n\n    /**\n     * The number of clicks done by the player at the time of save.\n     */\n    clicks: number,\n\n    /**\n     * The time at which the player created their save.\n     */\n    startDate: Date,\n\n    /**\n     * The number of falling coins destroyed by the player via clicking at the time of save.\n     */\n    coinsDestroyed: number,\n\n    /**\n     * The effects that the player was undergoing at the time of save.\n     */\n    effects: SimplifiedEffects[]\n}\n\n/**\n * A interface that represents only the data of an effect.\n */\ninterface SimplifiedEffects {\n    id: string,\n    duration: number\n}\n\n/**\n * This class manages saves.\n */\nclass SaveManager {\n    /**\n     * A reference to the current game.\n     */\n    game: Game;\n\n    /**\n     * The suggested name of the file (for save).\n     */\n    SUGGESTED = \"Coin Clicker Save.txt\";\n\n    /**\n     * Whether the save code should be encrypted (with a non-standard algorithm).\n     */\n    encryptedMode = process.env.NODE_ENV === \"production\";\n\n    /**\n     * Creates a new `SaveManager`.\n     * @param game A reference to the current game.\n     */\n    constructor(game: Game) {\n        this.game = game;\n    }\n\n    /**\n     * Generates save text based on the game instance.\n     * @returns The save text.\n     */\n    generateText() {\n        const obj = this.generateObject(this.game);\n        const unText = this.convertToSections(obj);\n        const text = this.encrypt(unText);\n\n        return text;\n    }\n\n    /**\n     * Generates an intermediate-save object basen on the game instance.\n     * @param g A reference to the current game.\n     * @returns the intermediate-save object.\n     */\n    generateObject(g: Game): SaveObject {\n        return {\n            coins: g.coins,\n            totalCoins: g.totalCoins,\n            buildings: <SaveObject[\"buildings\"]>g.buildings,\n            bought: g.bought,\n            achievements: g.achievements,\n            total: <SaveObject[\"total\"]>g.total,\n            clicks: g.clicks,\n            startDate: g.startDate,\n            coinsDestroyed: g.coinsDestroyed,\n            effects: this.simplifyEffects(g.effects)\n        }\n    }\n\n    /**\n     * Simplifies an array of effects.\n     * @param effects Effects to simplify.\n     * @returns An array of simplified effects.\n     */\n    simplifyEffects(effects: Effect[]): SimplifiedEffects[] {\n        return effects.map(e => ({id: e.type, duration: e.duration}));\n    }\n\n    /**\n     * Desimplifies an array of simplified effects.\n     * @param effects Effects to desimplify.\n     * @returns An array of desimplified effects.\n     */\n    desimplifyEffects(effects: SimplifiedEffects[]): Effect[] {\n        return effects.map(e => {\n            let {id, duration} = e;\n            // to account for older saves.\n            if (id === \"superFrenzy\") id = \"super_frenzy\";\n            return new Effect(id as Effect[\"type\"], duration, this.game);\n        })\n    }\n\n    /**\n     * Creates a new save object and returns it.\n     * @returns The clean-slate object.\n     */\n    generateFreshObject(): SaveObject {\n        return {\n            coins: 0,\n            totalCoins: 0,\n            buildings: {},\n            bought: [],\n            achievements: [],\n            total: {},\n            clicks: 0,\n            startDate: new Date(),\n            coinsDestroyed: 0,\n            effects: []\n        }\n    }\n\n    /**\n     * Loads save text into the game instance.\n     * @param code \n     * @returns There are three possible return values:\\\n     * |Returned|Description|\n     * |:-------------|:--------------------------------------------------|\n     * |`null`| It was rejected and already known to not work at all. It was not done by accident.|\n     * |`false`| It was rejected but had to be checked before.|\n     * |`true`| It was accepted and is loaded into the game.|\n     */\n    loadText(code: string) {\n        if (code === \"coinclick\") return null;\n        try {\n            const string = this.decrypt(code);\n\n            if (string === null) {\n                throw new TypeError(\"Decryption of the save failed.\");\n            }\n\n            const data = this.convertToObject(string);\n            this.loadObject(data);\n\n            return true;\n        } catch(e) {\n            console.error(\"Game data couldn't be loaded: \", e)\n            return false;\n        }\n    }\n\n    /**\n     * Loads a save-object into the game instance.\n     * @param data The save-object.\n     */\n    loadObject(data: SaveObject) {\n        const loadIn = [\n            \"coins\",\n            \"totalCoins\",\n            \"buildings\",\n            \"bought\",\n            \"achievements\",\n            \"total\",\n            \"clicks\",\n            \"startDate\"\n        ]\n\n        const noKey = loadIn.filter(key => {\n            // We need this, otherwise TypeScript will throw this error:\n            // T7053:\n            // Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'SaveObject'.\n            // No index signature with a parameter of type 'string' was found on type 'SaveObject'.\n            // @ts-expect-error\n            const obj = data[key];\n            return (typeof obj === \"number\" && isNaN(obj)) || obj === null || obj === undefined\n        });\n        if (noKey.length) {\n            throw new Error(\"Not every key was found. \\n\" + noKey.join(\", \"))\n        }\n\n        for (const key of Object.keys(data)) {\n            switch (key) {\n                case \"effects\":\n                    this.game.effects = [];\n                    for (const e of data.effects) {\n                        this.game.addEffect(<EffectType>e.id, e.duration);\n                    }\n                    break;\n                default:\n                    // @ts-expect-error\n                    this.game[key] = data[key];\n            }\n        }\n    }\n\n    /**\n     * Converts a save-object into sections.\n     * @param obj Save-object to convert.\n     * @returns Sections of the object.\n     */\n    convertToSections(obj: SaveObject) {\n        let text = \"\";\n\n        text += \"c:\" + obj.coins + \":\";\n        text += \"tc:\" + obj.totalCoins + \":\";\n        text += \"bu:\" + this.keypairsToText(obj.buildings) + \":\";\n        text += \"bo:\" + this.arrayToText(obj.bought) + \":\";\n        text += \"a:\" + this.arrayToText(obj.achievements) + \":\";\n        text += \"t:\" + this.keypairsToText(obj.total) + \":\";\n        text += \"cl:\" + obj.clicks + \":\";\n        text += \"s:\" + obj.startDate.getTime() + \":\";\n        text += \"cd:\" + obj.coinsDestroyed + \":\";\n        text += \"e:\" + this.effectsToText(obj.effects) + \":\";\n        \n        return text;\n    }\n\n    /**\n     * Splits text into sections.\n     * @param str Section text to convert to array.\n     * @returns Array of sections\n     */\n    textToArray(str: string) {\n        if (!str) return [];\n        return str.split(\";\");\n    }\n\n    /**\n     * Converts simplified effects into text.\n     * @param effects Effects to convert.\n     * @returns Resulting text.\n     */\n    effectsToText(effects: SimplifiedEffects[]) {\n        return effects.map(({id, duration}) => id + \";\" + duration).join(\";\");\n    }\n\n    /**\n     * Converts text into key-pairs.\n     * @param str Text to convert.\n     * @returns Keypairs of the text.\n     */\n    textToKeypairs(str: string) {\n        if (str === \"\") return {};\n        // Always {...key: number,...}\n        const fragments = str.split(\";\");\n        const obj: {[key: string]: number} = {};\n        for (let i = 0; i < fragments.length; i += 2) {\n            const [key, value] = [fragments[i], fragments[i + 1]];\n            if (!key) continue;\n            obj[key] = parseFloat(value);\n        }\n        return obj;\n    }\n\n    /**\n     * Asserts a certain boolean expression. If it evaluates to a `falsy` value, an assertion error is thrown.\n     * @param bool The expression\n     */\n    assert(bool: boolean) {\n        if (!bool) throw new Error(\"Assertion failed.\");\n    }\n\n    /**\n     * Converts decrypted save text into a save-object\n     * @param str Save text to convert.\n     * @returns A save-object.\n     */\n    convertToObject(str: string) {\n        const fragments = str.split(\":\");\n        const obj = this.generateFreshObject();\n        for (let i = 0; i < fragments.length; i += 2) {\n            const [key, value] = [fragments[i], fragments[i + 1]];\n            switch (key) {\n                case \"c\":\n                    // Coin amount.\n                    obj.coins = parseFloat(value);\n                    this.assert(!isNaN(obj.coins));\n                    break;\n                case \"tc\":\n                    // Total coins\n                    obj.totalCoins = parseFloat(value);\n                    this.assert(!isNaN(obj.totalCoins));\n                    break;\n                case \"bu\":\n                    // Buildings\n                    obj.buildings = this.textToKeypairs(value);\n                    this.assert(!!obj.buildings);\n                    break;\n                case \"bo\":\n                    // Bought upgrades\n                    obj.bought = this.textToArray(value);\n                    this.assert(Array.isArray(obj.bought));\n                    break;\n                case \"a\":\n                    // Achievements\n                    obj.achievements = this.textToArray(value);\n                    this.assert(Array.isArray(obj.achievements));\n                    break;\n                case \"t\":\n                    // Total coins (from buildings)\n                    obj.total = this.textToKeypairs(value);\n                    this.assert(!!obj.total);\n                    break;\n                case \"cl\":\n                    // Clicks\n                    obj.clicks = parseInt(value);\n                    this.assert(!isNaN(obj.clicks));\n                    break;\n                case \"s\":\n                    // Start Date\n                    obj.startDate = new Date(parseInt(value));\n                    break;\n                case \"cd\":\n                    // Coins destroyed\n                    obj.coinsDestroyed = parseInt(value);\n                    break;\n                case \"e\":\n                    // Effects\n                    obj.effects = this.textToEffects(value);\n                case \"\":\n                    break;\n                default:\n                    // Invalid ID found.\n                    throw new Error(\"Invalid ID \" + key + \" found.\")\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Converts text into simplified effects\n     * @param str Text to convert.\n     * @returns The resulting simplified effects.\n     */\n    textToEffects(str: string) {\n        const fragments = str.split(\";\");\n        let effects = [];\n\n        for (let i = 0; i < fragments.length; i += 2) {\n            const [id, duration] = [fragments[i], fragments[i + 1]];\n            if (!id) continue;\n            effects.push({id, duration: parseFloat(duration)});\n        }\n\n        return effects;\n    }\n\n    /**\n     * Converts an array of sections into text.\n     */\n    arrayToText(arr: string[]) {\n        return arr.join(\";\");\n    }\n\n    /**\n     * Converts key-pairs into text.\n     * @param obj Key-pairs to convert.\n     * @returns The resulting object.\n     */\n    keypairsToText(obj: {[key: string]: number}) {\n        return Object.entries(obj).map(([k, v]) => k + \";\" + v).join(\";\");\n    }\n\n    /**\n     * Encrypts decrypted save text. Does nothing if `encryptedMode` is `false`.\n     * @param text Save text to encrypt.\n     * @returns Encrypted save text.\n     */\n    encrypt(text: string) {\n        if (!this.encryptedMode) return text;\n        const base64 = btoa(text);\n\n        // Spec:\n        // 1234abcd5678efgh9012ijkl\n\n        let encrypted = \"coin\";\n        for (let i = 0; i < base64.length; i++) {\n            if (i % 6 < 2) {\n                encrypted += base64.charCodeAt(i).toString(16);\n            } else {\n                encrypted += base64.charAt(i);\n            }\n        }\n        encrypted += \"click\"\n\n        return encrypted;\n    }\n\n    /**\n     * Decrypts encrypted save text. Does nothing if `encryptedMode` is `false`.\n     * @param text Save text to decrypt.\n     * @returns Decrypted save text.\n     */\n    decrypt(text: string) {\n        if (!this.encryptedMode) return text;\n        if (text.startsWith(\"coin\") && text.endsWith(\"click\")) {\n            const start = text.slice(4, -5);\n            let decrypted = \"\";\n            for (let i = 0; i < start.length; i += 2) {\n                const chars = (start[i] || \"\") + (start[i + 1] || \"\");\n                if (i % 8 < 4) {\n                    decrypted += String.fromCharCode(parseInt(chars, 16));\n                } else {\n                    decrypted += chars;\n                }\n            }\n            return atob(decrypted);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Loads a save from a file. A file picker will open.\n     */\n    loadFromFile() {\n        const input = document.createElement(\"input\");\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"accept\", \".txt\");\n        input.addEventListener('change', async () => {\n            const {files} = input;\n\n            if (files && files.length) {\n                const file = files[0];\n\n                const text = await file.text();\n                \n                // We can attempt to load it.\n                this.loadText(text);\n            }\n        });\n\n        input.click();\n    }\n\n    /**\n     * Saves the code into a file.\n     * @param code The code to save.\n     */\n    async saveToFile(code: string) {\n        // We can use the File System API if available.\n        // @ts-ignore\n        // We need @ts-ignore to not throw an error; this API does not exist in Firefox and exists in Chrome.\n        if (window.showSaveFilePicker) {\n            try {\n                // @ts-ignore\n                const handle = await window.showSaveFilePicker({\n                    suggestedName: this.SUGGESTED,\n                    types: [\n                        {\n                            description: \"Coin Clicker Save\",\n                            accept: {\n                                \"text/plain\": [\".txt\"]\n                            }\n                        }\n                    ]\n                })\n\n                const writable = await handle.createWritable();\n                writable.write(code);\n                writable.close();\n            } catch(e) {\n                if (e instanceof DOMException && e.message.includes(\"request is not allowed\")) {\n                    this.saveToDownloads(code);\n                }\n                console.error(\"Could not save via File System API\", e);\n            }\n        } else {\n            this.saveToDownloads(code);\n        }\n    }\n\n    /**\n     * Downloads a file of code.\n     * @param code The code to download.\n     */\n    saveToDownloads(code: string) {\n        const blob = new Blob(code.split(\"\\n\"), {\n            type: 'text/plain'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = url;\n        // the filename you want\n        a.download = this.SUGGESTED;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }\n\n    /**\n     * Saves save text into local storage.\n     * @returns If saving to local storage was successful.\n     */\n    saveToStorage() {\n        const code = this.generateText();\n        try {\n            window.localStorage.setItem(\"coin-clicker.save\", code);\n        } catch(e) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Loads save text from local storage.\n     */\n    loadFromStorage() {\n        const data = window.localStorage.getItem(\"coin-clicker.save\");\n        if (data) this.loadText(data);\n    }\n\n    /**\n     * Wipe all game data, and start fresh.\n     */\n    wipe() {\n        const obj = this.generateFreshObject();\n        this.loadObject(obj);\n        this.saveToStorage();\n    }\n}\n\nexport default SaveManager;","import BIG_COIN_SRC from \"./images/coin_button.png\";\nimport BLANK_SRC from \"./images/blank_icon.png\";\nimport buildings, { Building } from \"./Buildings\";\nimport upgrades, { Upgrade } from \"./Upgrades\";\nimport categorizedAchievements, { achievements, Achievement } from \"./Achievements\";\nimport FallingCoin from \"./FallingCoin\";\nimport SaveManager from \"./SaveManager\";\nimport CoinImager from \"./CoinImager\";\nimport Effect, { EffectType } from \"./Effect\";\nimport Translator from \"./Translator\";\nimport { assert, selector, selectorAll } from \"./Selector\";\n\n/**\n * Describes the medium in which the save is saved or load.\n */\nenum SaveMedium {\n    TEXT = 0,\n    FILE = 1\n}\n\n/**\n * Describes a tab type.\n */\nenum Tab {\n    STATS = 0,\n    OPTIONS = 1\n}\n\n/**\n * Represents a buy mode.\n */\ntype BuyMode = 1 | 10 | 100;\n\n/**\n * This class represents an instance of Coin Clicker.\n */\nclass Game {\n    /**\n     * The amount of coins owned by the player.\n     */\n    coins = 0\n\n    /**\n     * The total amount of coins made by the player.\n     */\n    totalCoins = 0\n\n    /**\n     * The amount of coins made by the player per click.\n     */\n    coinsPerClick = 1\n\n    /**\n     * The amount of coins made by the player per second.\n     */\n    coinsPerSec = 0\n\n    /**\n     * The previous date in which delta was calculated.\n     */\n    oldTime = +new Date()\n\n    /**\n     * Tells if music is currently playing.\n     */\n    playingMusic = false;\n\n    /**\n     * The start date of the player.\n     */\n    startDate = new Date();\n\n    /**\n     * The amount of coins destroyed by the player (the coins falling down).\n     */\n    coinsDestroyed = 0;\n\n    /**\n     * The state of readiness of the game.\n     */\n    ready = 0;\n\n    /**\n     * The canvas instance owned by the game.\n     */\n    canvas: HTMLCanvasElement;\n\n    /**\n     * The 2D context of the canvas.\n     */\n    ctx: CanvasRenderingContext2D;\n\n    /**\n     * Size of the coin.\n     */\n    coinSize = 1.5\n\n    /**\n     * Size of the icon.\n     */\n    iconSize = 18;\n\n    /**\n     * Images of the game.\n     */\n    images: { [key: string]: HTMLImageElement } = {};\n\n    /**\n     * Buildings owned by the player.\n     */\n    buildings: { [key: string]: number } = {};\n\n    /**\n     * The upgrades bought by the player.\n     */\n    bought: string[] = [];\n\n    /**\n     * Number of ticks done by the game.\n     */\n    ticks = 0;\n\n    /**\n     * Indicates the buying power of buildings chosen by the user.\n     */\n    buyMode: BuyMode = 1;\n\n    /**\n     * The selected building which is displayed in its tooltip.\n     */\n    selectedBuilding: string | null = null;\n\n    /**\n     * The selected upgrade which is displayed in its tooltip.\n     */\n    selectedUpgrade: string | null = null;;\n\n    /**\n     * The selected achievement which is displayed in its tooltip.\n     */\n    selectedAchievement: string | null = null;\n\n    /**\n     * The selected effect which is displayed in its tooltip.\n     */\n    selectedEffect: EffectType | null = null;\n\n    /**\n     * The current x-position of the mouse.\n     */\n    mouseX = 0;\n\n    /**\n     * The current y-position of the mouse.\n     */\n    mouseY = 0;\n\n    /**\n     * Multiplier caused by achievements.\n     */\n    achieveMultiplier = 1;\n\n    /**\n     * Translator owned by the game.\n     */\n    translator: Translator;\n\n    /**\n     * Describes the color of buy modes (powers).\n     */\n    buyModeColours: { [key in BuyMode]: string } = {\n        1: \"white\",\n        10: \"#4c4\",\n        100: \"#4cc\"\n    };\n\n    /**\n     * The rates of the buildings, but values are in the format\\\n     * `[(number of coins made per click), (number of coins made per sec)]`.\n     */\n    rates: { [key: string]: [number, number] } = {};\n\n    /**\n     * The total coins made by the buildings, but values are in the format\\\n     * `[(number of total coins made per click), (number of total coins made per sec)]`.\n     */\n    total: { [key: string]: number } = {};\n\n    /**\n     * The array of falling coins.\n     */\n    fallingCoins: FallingCoin[] = [];\n\n    /**\n     * The stats which can be displayed.\n     */\n    stat: { [key: string]: () => number | string } = {};\n    clicks = 0\n\n    /**\n     * The current effects.\n     */\n    effects: Effect[] = [];\n\n    /**\n     * All the achievements achieved by the player.\n     */\n    achievements: string[] = [];\n\n    /**\n     * The index of the selected tab:\\\n     * |Tab            |Index|Selected Tab|\n     * |:--------------|:----|:-----------|\n     * |   Tab.STATS   |  0  |   Stats    |\n     * |  Tab.OPTIONS  |  1  |   Options  |\n     */\n    selectedTab: Tab = Tab.STATS;\n\n    /**\n     * Current multiplier of coin production.\n     */\n    multiplier = 1;\n\n    /**\n     * Unboosted multiplier of coin production, i.e. *the multiplier without accounting effects*.\n     */\n    unboostedMultiplier = 1;\n\n    /**\n     * Boosting multiplier of coin production, i.e. *the multiplier caused by effects*.\n     */\n    boostMultiplier = 1;\n\n    /**\n     * The amount of time since a falling coin spawned.\n     */\n    timeSinceCoinSpawn = 0;\n\n    /**\n     * The interval of falling coins spawning.\n     */\n    coinSpawnInterval = 1000;\n\n    /**\n     * The instance of the `SaveManager` of the game.\n     */\n    saveManager: SaveManager;\n\n    /**\n     * The instance of the `CoinImager` of the game.\n     */\n    coinImager: CoinImager;\n\n    /**\n     * The interval of autosave in ticks.\\\n     * *Usually*, **60 ticks** = **1 second**\n     */\n    static get AUTOSAVE_INTERVAL() {\n        return 720;\n    }\n\n    /**\n     * Creates a new `Game` object. This is used to represent Coin Clicker, as a game object.\n     * @param translator A translator instance.\n     */\n    constructor(translator: Translator) {\n        this.translator = translator;\n        // Get a reference to a canvas.\n        this.canvas = <HTMLCanvasElement>document.getElementsByClassName(\"canvas\")[0];\n        this.canvas.addEventListener(\"click\", this.canvasClick.bind(this));\n\n        this.ctx = assert(this.canvas.getContext(\"2d\"));\n\n        // Add an event for mousemove so that we can track the mouse's position.\n        document.addEventListener(\"mousemove\", this.setMouse.bind(this))\n\n        // Create the managers.\n        this.saveManager = new SaveManager(this);\n        this.coinImager = new CoinImager();\n\n        // Setup some data.\n        this.loadImages();\n        this.setupData();\n        this.registerStats();\n\n        // Add click events to the button in the `Options` tab.\n        selector(\".saveGame\").addEventListener(\"click\", this.saveToStorage.bind(this));\n        selector(\".wipeGame\").addEventListener(\"click\", this.wipeSave.bind(this))\n\n        selector(\".saveGameText\").addEventListener(\"click\", this.saveGame.bind(this, SaveMedium.TEXT))\n        selector(\".saveGameFile\").addEventListener(\"click\", this.saveGame.bind(this, SaveMedium.FILE))\n\n        selector(\".loadGameText\").addEventListener(\"click\", this.loadGame.bind(this, SaveMedium.TEXT))\n        selector(\".loadGameFile\").addEventListener(\"click\", this.loadGame.bind(this, SaveMedium.FILE))\n\n        // If the player uses the save key combination (CTRL + S), we want it to save.\n        document.addEventListener('keydown', e => {\n            if (e.ctrlKey && e.key === 's') {\n                e.preventDefault();\n\n                this.saveToStorage();\n            }\n        });\n\n        // Load the save from local storage if it exists.\n        this.saveManager.loadFromStorage();\n\n        // Finally, increase the ready state by 1, and maybe start the game.\n        if (++this.ready > 1) this.doStart();\n    }\n\n    /**\n     * Setups some data.\n     */\n    setupData() {\n        // Add some icons, and elements.\n        document.getElementsByClassName(\"coins-header\")[0].getElementsByTagName(\"div\")[0].appendChild(this.makeIcon(0, 0, 32));\n        document.getElementsByClassName(\"cpc-header\")[0].getElementsByTagName(\"div\")[0].appendChild(this.makeIcon(0, 0, 24));\n        document.getElementsByClassName(\"cps-header\")[0].getElementsByTagName(\"div\")[0].appendChild(this.makeIcon(0, 0, 24));\n        selector(\".upgrade-tooltip .cost\").appendChild(this.makeIcon(0, 0, 20));\n        selector(\".upgrade-tooltip .cost\").appendChild(document.createElement(\"span\"));\n\n        // Add click events to the tabs.\n        selector('.tab-wrapper button[type=\"stats\"]').addEventListener(\"click\", this.setSelectedTab.bind(this, 0));\n        selector('.tab-wrapper button[type=\"options\"]').addEventListener(\"click\", this.setSelectedTab.bind(this, 1));\n\n        // Generate some elements from upgrades.\n        for (let u of upgrades.sort((a, b) => a.cost - b.cost)) {\n            const elem = this.generateUpgrade(u);\n            document.getElementsByClassName(\"upgrades\")[0].appendChild(elem);\n            elem.addEventListener(\"click\", this.clickUpgrade.bind(this, u.id));\n            elem.addEventListener(\"mouseout\", () => this.selectedUpgrade = null)\n            elem.addEventListener(\"mouseover\", () => this.selectedUpgrade = u.id);\n        }\n\n        // Generate some elements from buildings.\n        for (let b of buildings) {\n            // Create an element.\n            const elem = this.buildingElement(b);\n            elem.getElementsByTagName(\"div\")[0].className = \"building-\" + b.id;\n            document.getElementsByClassName(\"buildings\")[0].appendChild(elem);\n            elem.addEventListener(\"click\", this.clickBuilding.bind(this, b.id))\n            elem.addEventListener(\"mouseleave\", () => this.selectedBuilding = null)\n            elem.addEventListener(\"mouseenter\", () => this.selectedBuilding = b.id);\n        }\n\n        // Generate some elements based on categories of achievements.\n        for (let [cn, cv] of Object.entries(categorizedAchievements)) {\n            const category = document.createElement(\"div\");\n            category.className = \"category category-\" + cn;\n            category.innerHTML = this.translator.formatAchievementCategory(cn);\n            selector(\"achievements\").appendChild(category);\n            for (let a of cv) {\n                const imgdiv = document.createElement(\"div\");\n                imgdiv.className = \"imgdiv achievement-\" + a.id;\n                imgdiv.appendChild(this.makeIcon(0, 4, 64));\n\n                imgdiv.addEventListener(\"mouseleave\", () => this.selectedAchievement = null);\n                imgdiv.addEventListener(\"mouseenter\", () => this.selectedAchievement = a.id);\n\n                selector(\".work-wrapper\").addEventListener(\"mouseover\", () => this.selectedAchievement = null);\n\n                selector(\"achievements\").appendChild(imgdiv);\n            }\n        }\n\n        // Add click event listeners to buy-mode buttons.\n        selectorAll(\".buy-bar button\").forEach(button => {\n            button.addEventListener(\"click\", this.changeBuyMode.bind(this, +assert(button.getAttribute(\"value\"))))\n        })\n\n        // Easy to use elements\n        // <coin></coin> = coin icon\n        // <icon x=\"X\" y=\"Y\"></icon> = other icon\n        selectorAll(\"coin\").forEach(coin => {\n            coin.appendChild(this.makeIcon(0, 0, this.iconSize))\n        });\n\n        selectorAll(\"icon\").forEach(icon => {\n            icon.appendChild(this.makeIcon(+assert(icon.getAttribute(\"x\")), +assert(icon.getAttribute(\"y\")), this.iconSize))\n        });\n\n        // By default, buy mode is 1.\n        this.changeBuyMode(1);\n\n        // Browser don't automatically play music. They wait for browser input before doing so.\n        try {\n            this.playMusic()\n        } catch {\n            console.warn(\"Will attempt to play music after coin click.\")\n        }\n    }\n\n    /**\n     * Register all necessary **stat**istic**s**.\n     */\n    registerStats() {\n        this.registerStat(\"ownedCoins\", () => this.coins);\n        this.registerStat(\"totalCoins\", () => this.totalCoins);\n        this.registerStat(\"rawCoinsPerClick\", () => this.rawCoinsPerClick);\n        this.registerStat(\"rawCoinsPerSec\", () => this.rawCoinsPerSec);\n        this.registerStat(\"clicks\", () => this.clicks);\n        this.registerStat(\"multiplier\", () => Math.round(this.multiplier * 100))\n        this.registerStat(\"achievementMultiplier\", () => Math.round(this.achieveMultiplier * 100))\n        this.registerStat(\"unlockedAchievements\", () => this.achievements.length);\n        this.registerStat(\"totalAchievements\", () => achievements.length);\n        this.registerStat(\"buildings\", () => this.buildingsNumber);\n        this.registerStat(\"startDate\", () => this.formatDate(this.startDate));\n        this.registerStat(\"coinsDestroyed\", () => this.coinsDestroyed)\n    }\n\n    /**\n     * Opens a dialog, asking the player to confirm if they want to wipe their save (i.e. *deleting* their save).\n     */\n    wipeSave() {\n        const elem = document.createElement(\"div\");\n        const yes = this.translator.format(\"dialogs.wipe.yes\");\n        const no = this.translator.format(\"dialogs.wipe.no\");\n        this.addToElement(elem, \"p\", this.translator.format(\"dialogs.wipe.warning_1\"))\n        this.showDialog(this.translator.format(\"dialogs.wipe.wipe_save\"), elem, [yes, no])\n            .then(opt => {\n                if (!opt) {\n                    // Yes\n                    this.addToElement(elem, \"p\", this.translator.format(\"dialogs.wipe.warning_2\"))\n                    this.showDialog(\"Wipe Save\", elem, [yes, no]).then(opt => {\n                        if (!opt) {\n                            this.saveManager.wipe();\n                            this.saveManager.wipe();\n                        }\n                    })\n                }\n            });\n    }\n\n    /**\n     * Saves the save.\n     * @param medium The medium to which the save is saved.\n     */\n    saveGame(medium: SaveMedium) {\n        const code = this.saveManager.generateText();\n\n        switch (medium) {\n            case SaveMedium.FILE:\n                this.saveManager.saveToFile(code);\n                break;\n            case SaveMedium.TEXT:\n                const saveDiv = document.createElement(\"div\");\n                this.addToElement(saveDiv, \"p\", this.translator.format(\"dialogs.save.info\"));\n\n                const textarea = this.addToElement(saveDiv, \"textarea\");\n                textarea.setAttribute(\"readonly\", \"true\");\n                textarea.setAttribute(\"unresizable\", \"true\");\n\n                textarea.value = code;\n\n                this.addToElement(saveDiv, \"br\")\n                this.showDialog(this.translator.format(\"dialogs.save.title\"), saveDiv);\n                break;\n        }\n    }\n\n    /**\n     * Loads a save.\n     * @param medium The medium from which the save is loaded from.\n     */\n    async loadGame(medium: SaveMedium) {\n        switch (medium) {\n            case SaveMedium.FILE:\n                this.saveManager.loadFromFile();\n                break;\n            case SaveMedium.TEXT:\n                const loadDiv = document.createElement(\"div\");\n                this.addToElement(loadDiv, \"p\", this.translator.format(\"dialogs.load.info\"));\n\n                const textarea = this.addToElement(loadDiv, \"textarea\");\n                textarea.setAttribute(\"unresizable\", \"true\");\n\n                this.addToElement(loadDiv, \"br\")\n\n                const error = this.addToElement(loadDiv, \"span\");\n                error.setAttribute(\"color\", \"red\");\n\n                while (true) {\n                    const index = await this.showDialog( this.translator.format(\"dialogs.load.title\"), loadDiv, [ this.translator.format(\"dialogs.load.load\"),  this.translator.format(\"dialogs.load.cancel\")], i => i === 1)\n                    if (index === 0) {\n                        // Load\n                        const result = this.saveManager.loadText(textarea.value);\n                        if (result) {\n                            (<HTMLElement>selector(\".dialog\")).style.visibility = \"hidden\";\n                            break;\n                        } else {\n                            selector(\".dialog span[color=\\\"red\\\"]\").innerHTML =\n                                (result === null ? this.translator.format(\"dialogs.load.haha_nice_try\") : this.translator.format(\"dialogs.load.invalid_save_code\"));\n                        }\n                    } else break;\n                }\n                break;\n        }\n    }\n\n    /**\n     * Creates an element with some `innerHTML`, if necessary, and then it is appended to another element.\n     * @param div The element.\n     * @param tagName The tag name of the newly created element.\n     * @param innerHTML The inner HTML of the newly created element.\n     * @returns The newly created element.\n     */\n    addToElement<K extends keyof HTMLElementTagNameMap>(div: HTMLElement, tagName: K, innerHTML = \"\") {\n        const element = document.createElement(tagName);\n        if (innerHTML) element.innerHTML = innerHTML;\n        div.appendChild(element);\n        return element;\n    }\n\n    /**\n     * Shows a dialog to the player.\n     * @param title The title of the dialog.\n     * @param element The element to put the dialog in.\n     * @param buttons The buttons to put in the dialog.\n     * @param stay Should the dialog close with a particular index?\\\n     * **Default Behaviour**: the dialog always closes.\n     * @returns A promise which resolves with the index of the button the player clicked, when the player check a button.\n     */\n    showDialog(title: string, element: HTMLElement, buttons = [this.translator.format(\"dialogs.ok\")], stay?: (index: number) => boolean) {\n        return new Promise(resolve => {\n            selectorAll(\".dialogButton\").forEach(oldButton => {\n                assert(oldButton.parentElement).removeChild(oldButton);\n            });\n            for (let index = 0; index < buttons.length; index++) {\n                const text = buttons[index];\n                const button = document.createElement(\"button\");\n                button.textContent = text;\n                button.className = \"dialogButton\"\n                button.onclick = () => {\n                    if (!stay || stay(index)) {\n                        (<HTMLElement>selector(\".dialog\")).style.visibility = \"hidden\";\n                    }\n                    resolve(index)\n                };\n                element.append(button);\n            }\n\n            selector(\".dialog .box\").innerHTML = \"\";\n\n            const titleDiv = this.addToElement(<HTMLElement>selector(\".dialog .box\"), \"div\");\n\n            titleDiv.className = \"title\";\n            titleDiv.textContent = title;\n\n            element.className = \"content\";\n\n            selector(\".dialog .box\").appendChild(titleDiv);\n            selector(\".dialog .box\").appendChild(element);\n            (<HTMLElement>selector(\".dialog\")).style.visibility = \"visible\";\n        });\n    }\n\n    /**\n     * Get the current coin production multiplier.\n     * This method updates certain variables.\n     * @returns the multiplier\n     */\n    getCurrentMultiplier() {\n        this.achieveMultiplier = Math.pow(1.15, this.achievements.length);\n        const m = [\n            1,\n            this.achieveMultiplier\n        ];\n        this.unboostedMultiplier = m.reduce((a, b) => a * b);\n\n        this.boostMultiplier = this.getBoost();\n        this.multiplier = this.unboostedMultiplier * this.boostMultiplier;\n        return this.multiplier;\n    }\n\n    /**\n     * Get the current coin production multiplier due to effects.\n     * @returns the multiplier\n     */\n    getBoost() {\n        let boost = 1;\n        for (const effect of this.effects) {\n            boost *= effect.getEffect();\n        }\n        return boost;\n    }\n\n    /**\n     * Updates the `mouseX` & `mouseY` to the mouse's current position from the `mousemove` event.\n     * @param e The event\n     */\n    setMouse(e: MouseEvent) {\n        this.mouseX = e.clientX;\n        this.mouseY = e.clientY;\n    }\n\n    /**\n     * Load certain images.\n     */\n    loadImages() {\n        this.images.big_coin = new Image();\n        this.images.big_coin.src = BIG_COIN_SRC;\n    }\n\n    /**\n     * Attempt to play looping music.\n     */\n    playMusic() {\n        if (!this.playingMusic) {\n            (<HTMLAudioElement>selector('.music'))\n                .play()\n                .then(() => this.playingMusic = true)\n                .catch(() => { })\n        }\n    }\n\n    /**\n     * Increases `ready` state by 1, and may start the game.\n     */\n    start() {\n        if (++this.ready > 1) this.doStart();\n    }\n\n    /**\n     * Actually starts the game loop.\n     */\n    private doStart() {\n        // Start our tick functions.\n        requestAnimationFrame(this.tickWithTryCatch.bind(this, +new Date()));\n    }\n\n    /**\n     * Progress the game by a tick (usually in frequency of 60 Hz), with try/catch.\n     * @param time The current date.\n     */\n    tickWithTryCatch(time: number) {\n        try {\n            this.tick(time);\n            requestAnimationFrame(this.tickWithTryCatch.bind(this, +new Date()));\n        } catch(e) {\n            const elem = document.createElement(\"div\");\n            this.addToElement(elem, \"p\", this.translator.format(\"dialogs.error.info\"));\n            this.showDialog(this.translator.format(\"dialogs.error.fatal_error\"), elem, [this.translator.format(\"dialogs.error.reload\")], (_) => false).then(\n                (_) => window.location.reload()\n            );\n            console.error(\"Unhandled error: \", e);\n        }\n        // requestAnimationFrame(this.tickWithTryCatch.bind(this, +new Date()));\n    }\n\n    /**\n     * Progress the game by a tick (usually in frequency of 60 Hz).\n     * @param time The current date.\n     */\n    tick(time: number) {\n        this.playMusic();\n\n        this.ticks++\n        // Find delta time.\n        const delta = time - this.oldTime;\n        this.timeSinceCoinSpawn += delta;\n        this.oldTime = time;\n\n        // Update some variables and text.\n        this.updateVariables(delta / 1000);\n        this.updateText();\n\n        if (this.ticks % 3 === 0) {\n            this.checkForNewAchievements();\n            this.updateUpgrades();\n        }\n\n        // Autosave feature is handled here.\n        if ((<HTMLInputElement>selector(\".autosave\")).checked && this.ticks % Game.AUTOSAVE_INTERVAL === 0) {\n            this.saveToStorage();\n        }\n\n        this.resizeCanvas();\n        this.animateCoin(delta);\n\n        this.coinSpawnInterval = Math.max(100, 1000 / Math.log10(this.coins))\n        if (this.coins <= 0) this.coinSpawnInterval = Infinity;\n\n        if (this.timeSinceCoinSpawn > this.coinSpawnInterval) {\n            // Spawn a coin.\n            this.fallingCoins.push(new FallingCoin(this.canvas, this.coinImager, this))\n            // set coins spawn to 0 instead of reducing it\n            this.timeSinceCoinSpawn = 0;\n        }\n\n        if (this.ticks <= 1) {\n            setTimeout((() =>\n                selector(\".loadScreen\").className = \"loadScreen loaded\")\n                , 1000);\n        }\n    }\n\n    /**\n     * Save the current state of the game into local storage.\n     */\n    saveToStorage() {\n        if (this.saveManager.saveToStorage()) {\n            document.body.setAttribute(\"saved\", \"1\");\n            setTimeout(() => document.body.setAttribute(\"saved\", \"0\"), 750)\n        }\n    }\n\n    /**\n     * Checks if new achievements can be achieved with the current conditions.\n     */\n    checkForNewAchievements() {\n        for (const a of achievements) {\n            if (this.achievements.indexOf(a.id) >= 0) {\n                const div = selector(\".achievement-\" + a.id);\n                div.removeChild(div.children[0]);\n                div.appendChild(this.makeIcon(...a.icon, 64))\n            } else if (a.goal(this)) {\n                this.achievements.push(a.id);\n                this.achievementPopUp(a);\n            } else {\n                const div = selector(\".achievement-\" + a.id);\n                div.removeChild(div.children[0]);\n                div.appendChild(this.makeIcon(0, 4, 64))\n            }\n        }\n        for (const [ck, cv] of Object.entries(categorizedAchievements)) {\n            let unlocked = 0;\n            for (const a of cv) {\n                if (this.achievements.indexOf(a.id) >= 0) unlocked++;\n            }\n\n            let category = selector(\".category-\" + ck);\n            category.setAttribute(\"unlocked\", unlocked.toString());\n            if (unlocked) {\n                category.innerHTML = this.translator.formatAchievementCategory(ck) + \"<span><p>\" + this.translator.formatAchievementCategoryCount(unlocked.toString(), cv.length.toString()) + \"</p>\";\n            } else {\n                category.innerHTML = \"???\";\n            }\n        }\n    }\n\n    /**\n     * Formats a date into this format:\\\n     * **Month** **DD**, **YYYY**\n     * @param date Date to format.\n     * @returns The formatted date as a string.\n     */\n    formatDate(date: Date) {\n        // Note: English language code here has be moved to the languages/en_us.ts file.\n        return this.translator.formatDate(date);\n    }\n\n    /**\n     * Update text.\n     */\n    updateText() {\n        const coinsHeader = document.getElementsByClassName(\"coins-header\")[0];\n        const textCoins = this.commify(this.coins, true);\n        const big = (textCoins.length > 12 ? 1 : 0).toString();\n        coinsHeader.setAttribute(\"big\", big);\n        coinsHeader.getElementsByTagName(\"span\")[0].innerHTML = \"\" + textCoins;\n        document.getElementsByClassName(\"cpc-header\")[0].getElementsByTagName(\"span\")[0].innerHTML = this.translator.format(\"coins.per_click\", this.commify(this.mulCoinsPerClick));\n        document.getElementsByClassName(\"cps-header\")[0].getElementsByTagName(\"span\")[0].innerHTML = this.coinsPerSec ? this.translator.format(\"coins.per_second\", this.commify(this.mulCoinsPerSec)) : \"\";\n        (<HTMLElement>document.getElementsByClassName(\"cps-header\")[0]).style.visibility = this.coinsPerSec ? \"\" : \"hidden\";\n\n        for (let building of buildings) {\n            const elem = document.getElementsByClassName(\"building-\" + building.id)[0];\n            elem.getElementsByTagName(\"div\")[0].getElementsByTagName(\"span\")[0].textContent = this.commify(this.nextBuildingsCost(building.id, this.buyMode));\n            elem.getElementsByTagName(\"div\")[0].getElementsByTagName(\"span\")[0].style.color = this.buyModeColours[this.buyMode]\n\n            if (this.totalCoins >= building.cost || this.coins >= building.cost) {\n                elem.getElementsByTagName(\"h2\")[0].textContent = this.translator.formatBuilding(building.id);\n                elem.getElementsByClassName(\"big\")[0].className = \"icon big unlock\";\n            } else {\n                elem.getElementsByTagName(\"h2\")[0].textContent = \"???\";\n                elem.getElementsByClassName(\"big\")[0].className = \"icon big\";\n            }\n\n            if (this.buildings[building.id])\n                elem.getElementsByTagName(\"h1\")[0].textContent = this.buildings[building.id].toString();\n            else\n                elem.getElementsByTagName(\"h1\")[0].textContent = \"\";\n\n            elem.setAttribute(\"afford\", (this.coins >= this.nextBuildingsCost(building.id, this.buyMode)).toString())\n        }\n\n        if (this.selectedBuilding) {\n            const id = buildings.findIndex(b => b.id === this.selectedBuilding);\n            const unlock = this.totalCoins >= buildings[id].cost;\n\n            const elem = <HTMLElement>document.getElementsByClassName(\"building-tooltip\")[0];\n            elem.style.visibility = \"visible\";\n\n            const tid = buildings[id].id;\n            const icon = unlock ? buildings[id].icon : [0, 4];\n            const amount = this.buildings[tid];\n\n            // Set the text\n            elem.getElementsByTagName(\"div\")[0].innerHTML = \"\";\n            elem.getElementsByTagName(\"div\")[0].appendChild(this.makeIcon(icon[0], icon[1], 48))\n            elem.getElementsByTagName(\"h2\")[0].textContent = (unlock ? this.translator.formatBuilding(tid) : \"???\");\n            elem.style.top = (this.mouseY - 75 / 2) + \"px\";\n\n            // Set desc\n            elem.getElementsByTagName(\"p\")[0].innerHTML = unlock ? this.translator.formatBuildingDescription(tid, amount, <[number, number]>this.rates[tid]?.map(x => x * this.multiplier), this.total[tid]) : \"???\";\n        } else {\n            (<HTMLElement>document.getElementsByClassName(\"building-tooltip\")[0]).style.visibility = \"hidden\";\n        }\n\n        const achievementTooltip = <HTMLElement>selector(\".achievement-tooltip\");\n        if (this.selectedAchievement) {\n            const a = assert(achievements.find(a => a.id === this.selectedAchievement));\n\n            if (achievementTooltip.getAttribute(\"selected\") !== this.selectedAchievement) {\n                const elem = this.achievementPopUp(a, true, this.achievements.indexOf(a.id) < 0);\n                achievementTooltip.removeChild(achievementTooltip.children[0])\n                achievementTooltip.appendChild(elem);\n            }\n\n            achievementTooltip.style.left = (this.mouseX) + \"px\";\n\n            achievementTooltip.style.visibility = \"visible\";\n            achievementTooltip.style.top = (this.mouseY - 25 - achievementTooltip.clientHeight) + \"px\";\n\n            achievementTooltip.setAttribute(\"selected\", this.selectedAchievement);\n        } else {\n            achievementTooltip.style.visibility = \"hidden\";\n        }\n\n        const effectTooltip = <HTMLElement>selector(\".effect-tooltip\");\n        if (this.selectedEffect) {\n            const e = this.effects.find(e => e.type === this.selectedEffect);\n\n            if (e) {\n                effectTooltip.style.left = (this.mouseX + 25) + \"px\";\n\n                effectTooltip.style.visibility = \"visible\";\n                effectTooltip.style.top = (this.mouseY - 25 - effectTooltip.clientHeight) + \"px\";\n\n                const meta = e.getMeta();\n                selector(\"h2\", effectTooltip).textContent = this.translator.format(meta[0]);\n                selector(\"p\", effectTooltip).innerHTML = this.translator.format(meta[1]);\n            } else\n                effectTooltip.style.visibility = \"hidden\";\n        } else {\n            effectTooltip.style.visibility = \"hidden\";\n        }\n\n        if (this.selectedUpgrade) {\n            const id = upgrades.findIndex(b => b.id === this.selectedUpgrade);\n            const afford = this.coins >= upgrades[id].cost;\n\n            const elem = <HTMLElement>document.getElementsByClassName(\"upgrade-tooltip\")[0]\n            elem.style.visibility = \"visible\";\n\n            const icon = upgrades[id].icon;\n\n            // Set the text\n            elem.getElementsByTagName(\"div\")[0].innerHTML = \"\";\n            elem.getElementsByTagName(\"div\")[0].appendChild(this.makeIcon(icon[0], icon[1], 48))\n            elem.getElementsByTagName(\"h2\")[0].textContent = this.translator.format(`upgrades.name.${this.selectedUpgrade}`);\n            elem.style.top = (this.mouseY + 25) + \"px\";\n            elem.style.left = (this.mouseX - 25 - 245) + \"px\";\n\n            // Set desc\n            elem.getElementsByTagName(\"p\")[0].innerHTML =\n                this.translator.format(`upgrades.description.${this.selectedUpgrade}`);\n            elem.getElementsByTagName(\"p\")[1].innerHTML =\n            this.translator.format(`upgrades.use.${this.selectedUpgrade}`);\n            elem.getElementsByTagName(\"span\")[0].textContent =\n                this.commify(upgrades[id].cost, false, true)\n            elem.getElementsByTagName(\"span\")[0].className = afford ? \"afford\" : \"noafford\"\n        } else {\n            (<HTMLElement>document.getElementsByClassName(\"upgrade-tooltip\")[0]).style.visibility = \"hidden\";\n        }\n\n        if (this.selectedTab) {\n            selector('.tab-wrapper button[type=\"stats\"]').className = \"\";\n            selector('.tab-wrapper button[type=\"options\"]').className = \"selected\";\n\n            (<HTMLElement>selector('.stats-wrapper')).style.visibility = \"hidden\";\n            (<HTMLElement>selector('.options-wrapper')).style.visibility = \"visible\";\n        } else {\n            selector('.tab-wrapper button[type=\"stats\"]').className = \"selected\";\n            selector('.tab-wrapper button[type=\"options\"]').className = \"\";\n\n            (<HTMLElement>selector('.stats-wrapper')).style.visibility = \"visible\";\n            (<HTMLElement>selector('.options-wrapper')).style.visibility = \"hidden\";\n        }\n    }\n\n    /**\n     * Resize the canvas according to the current screen size.\n     */\n    resizeCanvas() {\n        let canvas = this.canvas;\n        canvas.width = canvas.clientWidth;\n        canvas.height = canvas.clientHeight;\n    }\n\n    /**\n     * Animate the coin button based on the delta-time given.\n     * @param delta Delta time.\n     */\n    animateCoin(delta: number) {\n        this.coinSize += (1.5 - this.coinSize) / 4;\n\n        const { width, height } = this.canvas;\n        const { width: W, height: H } = this.images.big_coin;\n        const WW = W * this.coinSize;\n        const HH = H * this.coinSize;\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.animateFallingCoins(delta);\n        this.ctx.drawImage(this.images.big_coin, (width - WW) / 2, (height - HH) / 2, WW, HH);\n\n        if (this.boostMultiplier > 1) {\n            this.canvas.setAttribute(\"bg\", \"1\");\n        } else if (this.boostMultiplier < 1) {\n            this.canvas.setAttribute(\"bg\", \"-1\");\n        } else {\n            this.canvas.setAttribute(\"bg\", \"0\");\n        }\n    }\n\n    /**\n     * Animate the falling coins based on the delta-time given.\n     * @param delta Delta time.\n     */\n    animateFallingCoins(delta: number) {\n        for (let coinIndex = 0; coinIndex < this.fallingCoins.length; coinIndex++) {\n            let coin = this.fallingCoins[coinIndex]\n            if (coin.destroy === 1) {\n                // Remove\n                this.fallingCoins.splice(coinIndex, 1);\n            } else {\n                coin.draw();\n                coin.fall(delta);\n                // If too far down, delete the coin.\n                if (coin.y > this.canvas.height + 200) {\n                    this.fallingCoins.splice(coinIndex, 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * The event handler of click on a canvas.\n     * @param e The event.\n     */\n    canvasClick(e: MouseEvent) {\n        if (this.ready < 2) return;\n\n        const { clientX: x, clientY: y } = e;\n        // It already lines up.\n        // Calculate our offsets.\n        const X = x - (this.canvas.width / 2);\n        const Y = y - (this.canvas.height / 2);\n\n        const A = this.images.big_coin.width / 2 * this.coinSize;\n        const B = this.images.big_coin.height / 2 * this.coinSize;\n\n        if (X * X / (B * B) + Y * Y / (A * A) <= 1) {\n            return this.coinClick();\n        }\n\n        for (let i = this.fallingCoins.length - 1; i >= 0; i--) {\n            const coin = this.fallingCoins[i]\n            if (coin.isTouching(x, y)) {\n                this.coinsDestroyed++;\n                coin.click();\n                return;\n            }\n        }\n    }\n\n    /**\n     * Adds an amount of coins to the balance.\n     * @param coins The amount to add.\n     */\n    add(coins: number) {\n        this.coins += coins;\n        this.totalCoins += coins;\n    }\n\n    /**\n     * This function is called when the coin button is pressed.\n     */\n    coinClick() {\n        this.coinSize = 0.75 * 1.5;\n        this.add(this.coinsPerClick * this.multiplier);\n        this.clicks++;\n\n        for (let building of buildings) {\n            const { id } = building;\n            if (this.rates[id])\n                this.addToTotal(id, this.multiplier * this.rates[id][0])\n        }\n    }\n\n    /**\n     * Create an icon based on the `./images/icons.png` image spreadsheet.\n     * @param x Its x-index. It starts at 0 from left to right.\n     * @param y Its y-index. It starts at 0 from up to down.\n     * @param size The size of the icon. By default, it is `128`, which means `128x128`.\n     * @returns the icon image.\n     */\n    makeIcon(x: number, y: number, size = 128): HTMLImageElement {\n        // Each icon is 128x128.\n        const img = new Image();\n        img.src = BLANK_SRC;\n        img.className = \"icon\";\n        img.setAttribute(\"style\", `background-position: ${-x * size}px ${-y * size}px; width: ${size}px; height: ${size}px; background-size: ${size / 128 * 2048}px`);\n        return img;\n    }\n\n    /**\n     * Adds commas to a number and returns it, If the number is too big, it will instead add a suffix to the decimal number.\\\n     * For example: `1.234e12` -----> `1.234 trillion`.\n     * @param number The number to format.\n     * @param br Whether or not the number is rounded down.\n     * @param nodot If `true`, there will be no dot which is added when the number is\n     * - less than `10`\n     * - is a decimal\n     * @returns the formatted number\n     */\n    commify(number: number, br = false, nodot = false): string {\n        // Note: the language definition handles the commifying.\n        return this.translator.commify(number, br, nodot);\n    }\n\n    /**\n     * Creates a building element and returns it.\n     * @param obj The building information.\n     * @returns The element\n     */\n    buildingElement(obj: Building) {\n        const div = document.createElement(\"div\");\n        const title = document.createElement(\"h2\");\n        title.textContent = \"???\";\n        div.appendChild(title);\n        const cost = document.createElement(\"div\");\n        cost.appendChild(this.makeIcon(0, 0, 22))\n        const costText = document.createElement(\"span\");\n        costText.textContent = this.commify(obj.cost);\n        cost.appendChild(costText);\n        div.appendChild(cost);\n\n        const amountText = document.createElement(\"h1\");\n        div.appendChild(amountText);\n        const img = this.makeIcon(obj.icon[0], obj.icon[1], 64);\n        img.className = \"icon big\"\n        div.appendChild(img);\n\n        const button = document.createElement(\"button\");\n        button.appendChild(div);\n\n        return button;\n    }\n\n    /**\n     * Get the amount of a building owned by the player.\n     * @param type The type of the building.\n     * @returns The amount of the building owned.\n     */\n    getBuildings(type: string) {\n        return this.buildings[type] || 0;\n    }\n\n    /**\n     * Get the object of a building.\n     * @param type The type of the building.\n     * @returns The object of the building.\n     */\n    getBuildingObject(type: string) {\n        return buildings.find(build => build.id === type);\n    }\n\n    /**\n     * The cost of buying the next of a building.\n     * @param type The type of the building.\n     * @param amount The amount of buildings to be bought.\n     * @returns The total cost of buying the buildings.\n     */\n    nextBuildingsCost(type: string, amount = 1) {\n        let cost = 0;\n        const { cost: baseCost, increase: multiplier } = assert(this.getBuildingObject(type));\n        for (let i = 0; i < amount; i++) {\n            const total = this.getBuildings(type) + i;\n            cost += baseCost * Math.pow(multiplier, total);\n        }\n        return cost;\n    }\n\n    /**\n     * Add a particular amount of a building.\n     * @param type The type of the building.\n     * @param amount The amount to add.\n     */\n    addBuildings(type: string, amount = 1) {\n        if (this.buildings[type])\n            this.buildings[type] += amount;\n        else\n            this.buildings[type] = amount;\n    }\n\n    /**\n     * This method is called when a building box is clicked on.\n     * @param type The type of the building\n     */\n    clickBuilding(type: string) {\n        if (this.coins >= this.nextBuildingsCost(type, this.buyMode)) {\n            this.coins -= this.nextBuildingsCost(type, this.buyMode);\n            this.addBuildings(type, this.buyMode);\n        }\n    }\n\n    /**\n     * Finds an `Upgrade` object from its ID.\n     * @param id The ID of the upgrade.\n     * @returns The object.\n     */\n    getUpgrade(id: string) {\n        return upgrades.find(u => u.id === id);\n    }\n\n    /**\n     * This method is called when the upgrade is click on.\n     * @param id The ID of the upgrade.\n     */\n    clickUpgrade(id: string) {\n        if (this.coins >= this.eval(assert(this.getUpgrade(id)).cost)) {\n            this.coins -= this.eval(assert(this.getUpgrade(id)).cost);\n            this.bought.push(id);\n        }\n    }\n\n    /**\n     * Draws all the active effects.\n     * @param delta Delta time.\n     */\n    setBoost(delta: number) {\n        let index = 0;\n        for (const effect of this.effects) {\n            if (effect.expired) {\n                this.effects.splice(index, 1);\n\n                let elem;\n                while (elem = document.querySelector(\".effect-\" + effect.type))\n                    selector(\".effects >div\").removeChild(elem)\n            } else {\n                effect.tick(delta);\n                const div = selector(\".effect-\" + effect.type);\n                this.ctx.clearRect(0, 0, 48, 48);\n                this.ctx.fillStyle = \"rgba(75, 75, 0, 0.4)\";\n                this.ctx.beginPath();\n                this.ctx.moveTo(24, 24);\n                this.ctx.arc(24, 24, 24 * 1.5, Math.PI * -0.5, (-2 * effect.percentageDuration - 0.5) * Math.PI, true)\n                this.ctx.lineTo(24, 24);\n                this.ctx.closePath();\n                this.ctx.fill();\n            }\n            index++;\n        }\n    }\n\n    /**\n     * Check whether or not the player has the effect.\n     * @param id ID of the effect.\n     * @returns whether or not the player has it.\n     */\n    hasEffect(id: EffectType) {\n        return this.effects.some(effect => effect.type == id);\n    }\n\n    /**\n     * Adds an effect to be active. If already active, the duration is reset.\n     * @param id The ID of the effect.\n     * @param duration The duration of the effect.\n     * @returns \n     */\n    addEffect(id: EffectType, duration: null | number = null) {\n        const newEffect = new Effect(id, duration, this);\n\n        for (let i = 0; i < this.effects.length; i++) {\n            let effect = this.effects[i];\n            if (effect.type === id) {\n                effect.duration = newEffect.duration;\n                return;\n            }\n        }\n\n        this.effects.push(newEffect);\n        const effectDiv = document.createElement(\"div\");\n        effectDiv.appendChild(this.makeIcon(...newEffect.getIcon(), 48))\n\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = canvas.height = 48;\n        effectDiv.appendChild(canvas);\n        effectDiv.setAttribute(\"buff\", Math.sign(newEffect.getEffect() - 1).toString())\n        effectDiv.addEventListener(\"mouseenter\", () => this.selectedEffect = newEffect.type);\n        effectDiv.addEventListener(\"mouseleave\", () => this.selectedEffect = null);\n        effectDiv.className = \"effect-\" + id;\n        selector(\".effects >div\").appendChild(effectDiv);\n    }\n\n    /**\n     * Updates variables based on delta time.\n     * @param delta Delta time.\n     */\n    updateVariables(delta: number) {\n        this.coinsPerClick = 1;\n        this.coinsPerSec = 0;\n        this.getCurrentMultiplier();\n        this.setBoost(delta);\n        // Look through every building.\n        for (let building of buildings) {\n            const amount = this.buildings[building.id] || 0;\n            if (amount) {\n                let cpc = building.benefits[0] * amount;\n                let cps = building.benefits[1] * amount;\n\n                for (const upgrade of upgrades.filter(u => this.bought.includes(u.id))) {\n                    for (const benefit in upgrade.benefits) {\n                        if (benefit === building.id) {\n                            const func = upgrade.benefits[benefit];\n                            cpc = func(cpc, false, this);\n                            cps = func(cps, true, this);\n                        }\n                    }\n                }\n\n                this.rates[building.id] = [cpc, cps];\n\n                this.coinsPerClick += cpc;\n                this.coinsPerSec += cps;\n\n                this.addToTotal(building.id, delta * cps * this.multiplier);\n            }\n        }\n        // Increment coin count\n        this.add(this.coinsPerSec * delta * this.multiplier);\n        // Change stats\n        for (let stat of Object.entries(this.stat)) {\n            let val = stat[1]();\n            let str;\n            if (typeof val !== \"string\") {\n                str = this.commify(val)\n            } else {\n                str = val;\n            }\n            if (typeof val === \"number\") {\n                selectorAll(\"[stat=\" + stat[0] + \"]\").forEach(s => s.textContent = this.commify(<number>val, false, true));\n            } else {\n                selectorAll(\"[stat=\" + stat[0] + \"]\").forEach(s => s.textContent = <string>val);\n            }\n        }\n    }\n\n    /**\n     * The current *raw* coins per click.\n     */\n    get rawCoinsPerClick() {\n        const value = this.coinsPerClick * this.unboostedMultiplier;\n        return isNaN(value) ? 0 : value;\n    }\n\n    /**\n     * The current *raw* coins per second.\n     */\n    get rawCoinsPerSec() {\n        const value = this.coinsPerSec * this.unboostedMultiplier;\n        return isNaN(value) ? 0 : value;\n    }\n\n    /**\n     * The current coins per click.\n     */\n    get mulCoinsPerClick() {\n        const value = this.coinsPerClick * this.multiplier;\n        return isNaN(value) ? 0 : value;\n    }\n\n    /**\n     * The current coins per second.\n     */\n    get mulCoinsPerSec() {\n        const value = this.coinsPerSec * this.multiplier\n        return isNaN(value) ? 0 : value;\n    }\n\n    /**\n     * Add the contribution of total coins by a building.\n     * @param id The ID of the building.\n     * @param amount The amount of coins contributed.\n     */\n    addToTotal(id: string, amount: number) {\n        if (this.total[id] === undefined) {\n            this.total[id] = 0;\n        }\n        this.total[id] += amount;\n    }\n\n    /**\n     * Generate an element for an upgrade.\n     * @param upgrade The upgrade object to generate it for.\n     * @returns The newly generated element.\n     */\n    generateUpgrade(upgrade: Upgrade) {\n        const icon = this.makeIcon(upgrade.icon[0], upgrade.icon[1], 48);\n        const div = document.createElement(\"div\");\n        div.appendChild(icon);\n        const button = document.createElement(\"button\");\n        button.className = \"upgrade-\" + upgrade.id;\n        button.appendChild(div);\n        return button;\n    }\n\n    /**\n     * Upgrade the element of each upgrade.\n     */\n    updateUpgrades() {\n        for (let upgrade of upgrades) {\n            const elem = <HTMLElement>document.getElementsByClassName(\"upgrade-\" + upgrade.id)[0];\n            if (this.bought.indexOf(upgrade.id) >= 0 || this.isLocked(upgrade)) {\n                elem.style.display = \"none\";\n            } else {\n                elem.style.display = \"initial\";\n                elem.setAttribute(\"afford\", (this.coins >= this.eval(upgrade.cost)).toString())\n            }\n        }\n    }\n\n    /**\n     * Whether the upgrade is locked.\n     * @param upgrade The upgrade object\n     * @returns Whether or not the upgrade is locked.\n     */\n    isLocked(upgrade: Upgrade) {\n        for (const type of Object.keys(upgrade.requirements)) {\n            const value = upgrade.requirements[type];\n            switch (type) {\n                default:\n                    if (!(this.buildings[type] && this.buildings[type] >= value)) {\n                        return true;\n                    }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns the same value given, but for one exception:\n     * - If a function is provided, it will instead call it and return its result.\n     * @param num The value to evaluate.\n     * @returns The value described above.\n     */\n    eval(num: number | (() => number)) {\n        // If it is a function, execute it.\n        if (typeof num === \"function\") {\n            return num();\n        }\n        return num;\n    }\n\n    /**\n     * Converts a tuple of `CPC` and `CPS` respectively to a formatted string.\n     * @param cpccps The tuple.\n     * @param extra Extra info to add at the end, if necessary.\n     * @returns The formatted string.\n     */\n    convertToEnglish(cpccps: [number, number], extra = \"\") {\n        if (!cpccps) return \"coins\";\n        const [cpc, cps] = cpccps;\n        const parts = []\n        if (cpc > 0) {\n            parts.push(this.commify(cpc, false, true) + \" \" + (cpc === 1 ? \"coin\" : \"coins\") + \" per click\")\n        }\n        if (cps > 0) {\n            parts.push(this.commify(cps, false, true) + \" \" + (cps === 1 ? \"coin\" : \"coins\") + \" per second\")\n        }\n        return \"<b>\" + parts.join(\" and \") + extra + \"</b>\";\n    }\n\n    /**\n     * The total number of buildings owned by the player.\n     */\n    get buildingsNumber() {\n        return this.getTotalBuildings();\n    }\n\n    /**\n     * Get the total number of buildings.\n     * @param excludeCursors If this is true, cursors are excluded from the final value.\n     * @returns The total number of buildings.\n     */\n    getTotalBuildings(excludeCursors = false) {\n        var number = 0;\n        for (let id of Object.keys(this.buildings)) {\n            if (!(excludeCursors && id === \"cursor\")) number += this.buildings[id] || 0;\n        }\n        return number;\n    }\n\n    /**\n     * Changes the buy mode.\n     * @param mode The buy mode.\n     */\n    changeBuyMode(mode: BuyMode) {\n        this.buyMode = mode;\n        selectorAll(\".buy-bar button\").forEach(button => {\n            button.className = mode === +assert(button.getAttribute(\"value\")) ? \"selected\" : \"\";\n        });\n    }\n\n    /**\n     * Set the selected tab.\n     * @param tab The tab to select.\n     */\n    setSelectedTab(tab: Tab) {\n        this.selectedTab = tab;\n    }\n\n    /**\n     * Register a **stat**istic.\n     * @param id The ID of the statistic.\n     * @param number The number of the statistic.\n     */\n    registerStat(id: string, number: () => (number | string)) {\n        this.stat[id] = number;\n    }\n\n    /**\n     * Returns the number of a building owned by the player.\n     * @param id The ID of the building.\n     * @returns The number of buildings owned by the player.\n     */\n    getNumberOfBuildings(id: string) {\n        return this.buildings[id] || 0;\n    }\n\n    /**\n     * Make an achievement pop up. \n     * @param achievement The achievement object to pop up.\n     * @param isTooltip Whether or not it is a tooltip.\n     * @param locked Whether or not the achievement is locked.\n     * @returns The newly created element from it.\n     */\n    achievementPopUp(achievement: Achievement, isTooltip = false, locked = false) {\n        const elem = document.createElement(\"div\");\n\n        const imgdiv = document.createElement(\"div\");\n        imgdiv.className = \"imgdiv\";\n        const indices = locked ? [0, 4] : achievement.icon;\n        imgdiv.appendChild(this.makeIcon(indices[0], indices[1], 32));\n        elem.appendChild(imgdiv);\n\n        const titlediv = document.createElement(\"div\");\n        titlediv.className = \"titlediv\";\n\n        const title = document.createElement(\"h1\");\n        title.textContent = locked ? \"???\" : this.translator.format(\"achievements.name.\" + achievement.id);\n        titlediv.appendChild(title);\n        elem.append(titlediv);\n\n        const A = selector(\".achievement\").innerHTML;\n        const adiv = document.createElement(\"div\");\n        adiv.className = \"adiv\";\n        adiv.innerHTML = A;\n        selector(\".description\", adiv).innerHTML = locked ? \"\" : this.translator.format(\"achievements.description.\" + achievement.id);\n        selector(\".how\", adiv).innerHTML = locked ? \"\" : this.translator.format(\"achievements.how.\" + achievement.id);\n        elem.append(adiv);\n\n        if (!isTooltip) {\n            const close = document.createElement(\"button\");\n            close.textContent = \"\\u00d7\";\n            close.addEventListener(\"click\", () => {\n                assert(elem.parentElement).removeChild(elem)\n                let i = 0;\n                let elems = selectorAll(\".achievements >div >div\");\n                Array.from(elems).sort((a, b) => {\n                    const nA = +assert(a.getAttribute(\"recent\"));\n                    const nB = +assert(b.getAttribute(\"recent\"));\n                    return nA - nB;\n                }).forEach(other => {\n                    other.setAttribute(\"recent\", (i++).toString());\n                });\n            });\n\n            elem.append(close);\n            elem.setAttribute(\"recent\", \"0\")\n            selectorAll(\".achievements >div >div\").forEach(other => {\n                let recent = +assert(other.getAttribute(\"recent\")) + 1;\n                if (recent >= 3) {\n                    assert(other.parentElement).removeChild(other);\n                } else {\n                    other.setAttribute(\"recent\", recent.toString());\n                }\n            });\n            selector(\".achievements >div\").appendChild(elem);\n            close.setAttribute(\"style\", \"--up: \" + elem.clientHeight + \";\");\n\n            return elem;\n        } else {\n            return elem;\n        }\n    }\n}\n\nexport default Game;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./styles.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./styles.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import Translator from \"./Translator\";\nimport music from \"./sounds/music.wav\";\nconst {version} = require(\"../package.json\");\n\n/**\n * This class builds the HTML for the game.\n */\nclass HtmlBuilder {\n    /**\n     * Populates the body node.\n     * @param translator A translator instance.\n     */\n    static populate(translator: Translator) {\n        document.body.append(...this.generate(translator));\n        console.log(\"Populated <body>.\");\n    }\n\n    /**\n     * Generates a list of nodes which must be inserted into the body tag.\n     * @param translator A translator instance.\n     * @returns {HTMLDivElement[]}\n     */\n    static generate(translator: Translator): HTMLDivElement[] {\n        return [\n            this.loadingDiv(),\n            this.audioWrapper(\n                this.loopingMusic()\n            ),\n            this.canvasWrapper(translator),\n            this.middleWrapper(translator),\n            this.buildingsWrapper(translator),\n            this.buildingTooltip(),\n            this.achievementTooltip(),\n            this.upgradeTooltip(),\n            this.effectTooltip(),\n            this.achievement(),\n            this.dialog()\n        ];\n    }\n\n    /**\n     * Generates the loading div element.\n     * <div style=\"z-index: 1000000\" class=\"loadScreen\">\n     *     <h1>Loading Coin Clicker...</h1>\n     *  </div>\n     * @returns {HTMLDivElement}\n     */\n    static loadingDiv(): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.style.zIndex = \"1000000\";\n        div.className = \"loadScreen\";\n\n        let header = document.createElement(\"h1\");\n        header.textContent = \"Loading Coin Clicker...\";\n\n        div.appendChild(header);\n        \n        return div;\n    }\n\n    /**\n     * Generate an audio node that loops music.\n     * <audio class=\"music\" controls loop>\n     *     <source src=\"./sounds/music.wav\" type=\"audio/wav\">\n     * </audio>\n     * @returns {HTMLAudioElement}\n     */\n    static loopingMusic(): HTMLAudioElement {\n        var node = document.createElement(\"audio\");\n        node.className = \"music\";\n        node.controls = true;\n        node.loop = true;\n    \n        var source = document.createElement(\"source\");\n        source.src = music;\n        source.type = \"audio/wav\";\n    \n        node.appendChild(source);\n    \n        return node;\n    }\n\n    /**\n     * Generate an audio wrapper.\n     * @param {HTMLAudioElement} audioElement The audio element to be wrapped.\n     * @returns {HTMLDivElement}\n     * <div style=\"visibility: hidden\" class=\"audioWrapper\">\n     *     <!-- audio node is inserted here -->\n     * </div>\n     */\n    static audioWrapper(audioElement: HTMLAudioElement): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.style.visibility = \"hidden\";\n        div.className = \"audioWrapper\";\n\n        div.appendChild(audioElement);\n        \n        return div;\n    }\n\n    /**\n     * Generates a canvas sub-header.\n     * @param {String} className The class name.\n     * @param {String} name Element name\n     * @returns {HTMLHeadingElement}\n     * <h1 class=\"...\">\n     *    <div></div>\n     *    <span></span>\n     * </h1>\n     */\n    static canvasSubHeader(className: string, name: \"h1\" | \"h3\"): HTMLHeadingElement {\n        let header = document.createElement(name);\n        header.className = className;\n        header.append(document.createElement(\"div\"));\n        header.append(document.createElement(\"span\"));\n\n        return header;\n    }\n\n    /**\n     * Generates a canvas header which contains its sub-headers.\n     * @param {HTMLHeadingElement[]} subheaders Its sub-headers.\n     * @returns {HTMLDivElement}\n     */\n    static canvasHeader(subheaders: HTMLHeadingElement[]): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        for (let subheader of subheaders) {\n            div.appendChild(subheader);\n        }\n\n        return div;\n    }\n\n    /**\n     * Generates a canvas wrapper.\n     * @returns {HTMLDivElement}\n     * <div class=\"canvas-wrapper\">\n            <div class=\"header\">\n                <h1 class=\"coins-header\">\n                    <div></div>\n                    <span></span>\n                </h1>\n                <h3 class=\"cpc-header\">\n                    <div></div>\n                    <span></span>\n                </h3>\n                <h3 class=\"cps-header\">\n                    <div></div>\n                    <span></span>\n                </h3>\n            </div>\n            <canvas class=\"canvas\"></canvas>\n            <span class=\"savetext\"><span>SAVED</span></span>\n            <div class=\"effects\"><div></div></div>\n        </div>\n     */\n    static canvasWrapper(translator: Translator): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"canvas-wrapper\";\n\n        let canvasHeader = this.canvasHeader([\n            this.canvasSubHeader(\"coins-header\", \"h1\"),\n            this.canvasSubHeader(\"cpc-header\", \"h3\"),\n            this.canvasSubHeader(\"cps-header\", \"h3\"),\n        ]);\n        canvasHeader.className = \"header\";\n\n        let canvas = document.createElement(\"canvas\");\n        canvas.className = \"canvas\";\n\n        let span = document.createElement(\"span\");\n        span.className = \"savetext\";\n        let innerSpan = document.createElement(\"span\");\n        innerSpan.textContent = translator.format(\"coins.saved\");\n        span.appendChild(innerSpan);\n\n        let effects = document.createElement(\"div\");\n        effects.className = \"effects\";\n        let innerEffects = document.createElement(\"div\");\n        effects.appendChild(innerEffects);        \n\n        div.append(\n            canvasHeader,\n            canvas,\n            span,\n            effects\n        );\n\n        return div;\n    }\n\n    /**\n     * Generates a middle wrapper.\n     * @param translator A translator instance.\n     * @returns {HTMLDivElement}\n     * <div class=\"middle-wrapper\">\n            <div class=\"tab-wrapper\">\n                <div>\n                    <button type=\"stats\">Stats</button>\n                    <button type=\"options\">Options</button>\n                </div>\n            </div>\n            <div class=\"work-wrapper\">\n                <div class=\"stats-wrapper\">\n                    <p>Coins currently owned: <coin></coin><span stat=\"ownedCoins\">...</span></p>\n                    <p>Total coins made: <coin></coin><span stat=\"totalCoins\">...</span></p>\n                    <p>Raw coins per click: <icon x=\"1\" y=\"0\"></icon><span stat=\"rawCoinsPerClick\">...</span></p>\n                    <p>Raw coins per second: <icon x=\"1\" y=\"0\"></icon><span stat=\"rawCoinsPerSec\">...</span></p>\n                    <p>Clicks done: <icon x=\"0\" y=\"1\"></icon><span stat=\"clicks\">...</span></p>\n                    <p>Start Date: <span stat=\"startDate\">...</span></p>\n                    <p>Coins Destroyed: <icon x=\"2\" y=\"0\"></icon><span stat=\"coinsDestroyed\">...</span></p>\n                    <br>\n                    <p>Buildings: <span stat=\"buildings\">...</span></p>\n                    <p>Current multiplier percentage: <span stat=\"multiplier\">...</span>%</p>\n                    <h2>Achievements</h2>\n                    <p>Achievements unlocked: <span stat=\"unlockedAchievements\">...</span>/<span stat=\"totalAchievements\">...</span></p>\n                    <p>Achievement multiplier percentage: <span stat=\"achievementMultiplier\">...</span>% (each achievement gives +15%)</p>\n                    <achievements></achievements>\n                </div>\n                <div class=\"options-wrapper\">\n                    <h2>Basic</h2>\n                    <button class=\"saveGame\">Save to browser (CTRL+S)</button>\n                    <br><br><input class=\"autosave\" type=\"checkbox\" checked>Autosave</input><br><br>\n                    <h2>Game Data</h2>\n                    <p>Save your game data <button class=\"saveGameText\">into text</button><button class=\"saveGameFile\">into a file</button>.</p>\n                    <p>Load your game data <button class=\"loadGameText\">from text</button><button class=\"loadGameFile\">from a file</button>.</p>\n                    <h2 style=\"color: red;\">Unsafe</h2>\n                    <button class=\"wipeGame\">Wipe save</button>\n                </div>\n                <div class=\"achievements\"><div class=\"cover\"></div></div>\n            </div>\n        </div>\n     */\n    static middleWrapper(translator: Translator): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"middle-wrapper\";\n\n        let tabDiv = document.createElement(\"div\");\n        tabDiv.append(\n            this.typedButton(\"stats\", \"Stats\"),\n            this.typedButton(\"options\", \"Options\")\n        );\n\n        let tabWrapper = document.createElement(\"div\");\n        tabWrapper.className = \"tab-wrapper\";\n        tabWrapper.appendChild(tabDiv);\n\n        let workWrapper = document.createElement(\"div\");\n        workWrapper.className = \"work-wrapper\";\n\n        let statsWrapper = document.createElement(\"div\");\n        statsWrapper.className = \"stats-wrapper\";\n        statsWrapper.innerHTML = [\n            this.h2Stat(translator, 'stats.general_title'),\n            this.pStat(translator, 'stats.owned_coins', '<coin></coin>', '<span stat=\"ownedCoins\">...</span>'),\n            this.pStat(translator, 'stats.total_coins', '<coin></coin>', '<span stat=\"totalCoins\">...</span>'),\n            this.pStat(translator, 'stats.raw_coins_per_click', '<icon x=\"1\" y=\"0\"></icon>', '<span stat=\"rawCoinsPerClick\">...</span>'),\n            this.pStat(translator, 'stats.raw_coins_per_second', '<icon x=\"1\" y=\"0\"></icon>', '<span stat=\"rawCoinsPerSec\">...</span>'),\n            this.pStat(translator, 'stats.clicks_done', '<icon x=\"0\" y=\"1\"></icon>', '<span stat=\"clicks\">...</span>'),\n            this.pStat(translator, 'stats.start_date', '<span stat=\"startDate\">...</span>'),\n            this.pStat(translator, 'stats.coins_destroyed', '<icon x=\"2\" y=\"0\"></icon>', '<span stat=\"coinsDestroyed\">...</span>'),\n\n            '<br>',\n\n            this.pStat(translator, 'stats.buildings', '<span stat=\"buildings\">...</span>'),\n            this.pStat(translator, 'stats.multiplier','<span stat=\"multiplier\">...</span>'),\n            this.h2Stat(translator, 'stats.achievements_title'),\n            this.pStat(translator, 'stats.unlocked_achievements', '<span stat=\"unlockedAchievements\">...</span>', '<span stat=\"totalAchievements\">...</span>'),\n            this.pStat(translator, 'stats.achievement_multiplier', '<span stat=\"achievementMultiplier\">...</span>'),\n\n            '<achievements></achievements>',\n            '<br><br>',\n\n            `<version>v${version}</version>`\n        ].join(\"\");\n\n        let optionsWrapper = document.createElement(\"div\");\n        optionsWrapper.className = \"options-wrapper\";\n        optionsWrapper.innerHTML = [\n            this.h2Stat(translator, 'options.basic_title'),\n            `<button class=\"saveGame\">${translator.format(\"options.save_to_browser\")}</button>`,\n            `<br><br><input class=\"autosave\" type=\"checkbox\" checked>${translator.format(\"options.autosave\")}</input><br><br>`,\n            this.h2Stat(translator, 'options.game_data_title'),\n\n            this.pStatWithImportance(translator,\n                \"options.save_game_data.main\",\n                `<button class=\"saveGameText\">${translator.format(\"options.save_game_data.1\")}</button>`,\n                `<button class=\"saveGameFile\">${translator.format(\"options.save_game_data.2\")}</button>`\n            ),\n            this.pStatWithImportance(translator,\n                \"options.load_game_data.main\",\n                `<button class=\"loadGameText\">${translator.format(\"options.load_game_data.1\")}</button>`,\n                `<button class=\"loadGameFile\">${translator.format(\"options.load_game_data.2\")}</button>`\n            ),\n\n            `<h2 style=\"color: red;\">${translator.format(\"options.unsafe_title\")}</h2>`,\n            `<button class=\"wipeGame\">${translator.format(\"options.wipe_save\")}</button>`\n        ].join(\"\");\n\n        let achievements = document.createElement(\"div\");\n        achievements.className = \"achievements\";\n        achievements.innerHTML = '<div class=\"cover\"></div></div>';\n\n        workWrapper.append(\n            statsWrapper,\n            optionsWrapper,\n            achievements\n        );\n\n        div.append(\n            tabWrapper,\n            workWrapper\n        );\n\n        return div;\n    };\n\n    /**\n     * Translates a stat. <p>\n     * @param translator The translator instance.\n     * @param translationId The ID in `camel_case`.\n     * @param impArgs Important arguments.\n     * @param args The extra arguments of the translation.\n     * @returns The newly created innerHTML. \n     */\n    static pStat(translator: Translator, translationId: string, ...args: string[]) {\n        return `<p>${translator.format(translationId, ...args)}</p>`;\n    }\n\n    /**\n     * Translates a stat, with importance. <p>\n     * @param translator The translator instance.\n     * @param translationId The ID in `camel_case`.\n     * @param impArgs Important arguments.\n     * @param args The extra arguments of the translation.\n     * @returns The newly created innerHTML. \n     */\n    static pStatWithImportance(translator: Translator, translationId: string, ...args: string[]) {\n        const p = document.createElement(\"p\");\n        const tuple = translator.formatAsTuple(translationId, ...args);\n        p.innerHTML = tuple[0];\n        tuple[1].forEach(element => {\n            p.innerHTML += element;\n        });\n        return p.outerHTML;\n    }\n\n    /**\n     * Translates a stat. <h2>\n     * @param translator The translator instance.\n     * @param translationId The stat ID in `camel_case`.\n     * @param args The extra arguments of the translation.\n     * @returns The newly created innerHTML. \n     */\n    static h2Stat(translator: Translator, translationId: string, ...args: string[]) {\n        return `<h2>${translator.format(translationId, ...args)}</h2>`;\n    }\n\n    /**\n     * Creates a typed button.\n     * @param {string} type Type of the button.\n     * @param {string} content Content of the button.\n     */\n    static typedButton(type: string, content: string) {\n        let button = document.createElement(\"button\");\n        // We need this, otherwise TypeScript will throw this error:\n        // TS2322: Type 'string' is not assignable to type '\"button\" | \"submit\" | \"reset\"'.\n        // @ts-expect-error\n        button.type = type;\n        button.textContent = content;\n        return button;\n    }\n\n    /**\n     * Creates a buildings-wrapper.\n     * @returns {HTMLDivElement}\n     * <div class=\"buildings-wrapper\">\n            <span>Upgrades</span>\n            <div class=\"upgrades\"></div>\n            <br>\n            <span>Buildings</span>\n            <div class=\"buy-bar\">\n                <button value=\"1\">1</button>\n                <button value=\"10\">10</button>\n                <button value=\"100\">100</button>\n            </div>\n            <div class=\"buildings\"></div>\n            <div style=\"height: 250px\"></div>\n        </div>\n     */\n    static buildingsWrapper(translator: Translator): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"buildings-wrapper\";\n        div.innerHTML = [\n            `<span>${translator.format(\"upgrades.upgrades\")}</span>`,\n            '<div class=\"upgrades\"></div>',\n            '<br>',\n            `<span>${translator.format(\"building.buildings\")}</span>`,\n            '<div class=\"buy-bar\">',\n                '<button value=\"1\">1</button>',\n                '<button value=\"10\">10</button>',\n                '<button value=\"100\">100</button>',\n            '</div>',\n            '<div class=\"buildings\"></div>',\n            '<div style=\"height: 250px\"></div>'\n        ].join(\"\");\n        return div;\n    }\n\n    /**\n     * Creates a div which represents a building-tooltip.\n     * @returns {HTMLDivElement}\n     * <div class=\"building-tooltip\" style=\"visibility: hidden;\">\n            <div></div>\n            <h2>BUILDING</h2>\n            <br>\n            <br>\n            <p>...</p>\n        </div>\n     */\n    static buildingTooltip(): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"building-tooltip\";\n        div.style.visibility = \"hidden\";\n        div.innerHTML = [\n            '<div></div>',\n            '<h2>BUILDING</h2>',\n            '<br>',\n            '<br>',\n            '<p>...</p>'\n        ].join(\"\");\n        return div;\n    }\n\n    /**\n     * Creates a div which represents an achievement-tooltip.\n     * @returns {HTMLDivElement}\n     *  <div class=\"achievement-tooltip\" style=\"visibility: hidden;\"><div></div></div>\n     */\n    static achievementTooltip(): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"achievement-tooltip\";\n        div.style.visibility = \"hidden\";\n        div.appendChild(document.createElement(\"div\"));\n        return div;\n    }\n\n    /**\n     * Creates a div which represents an update-tooltip.\n     * @returns {HTMLDivElement}\n     *  <div class=\"upgrade-tooltip\" style=\"visibility: hidden;\">\n            <div></div>\n            <div className=\"nameIn\"><h2>UPGRADE</h2></div>\n            <br>\n            <br>\n            <p>...</p>\n            <s>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</s>\n            <p>...</p>\n            <p class=\"cost\">Cost: </p>\n        </div>\n     */\n    static upgradeTooltip(): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"upgrade-tooltip\";\n        div.style.visibility = \"hidden\";\n        div.innerHTML = [\n            '<div></div>',\n            '<div className=\"nameIn\"><h2>UPGRADE</h2></div>',\n            '<br>',\n            '<br>',\n            '<p>...</p>',\n            '<s>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</s>',\n            '<p>...</p>',\n            '<p class=\"cost\">Cost: </p>',\n        ].join(\"\");\n        return div;\n    }\n\n    /**\n     * Creates a div which represents an effect-tooltip.\n     * @returns {HTMLDivElement}\n     * <div class=\"effect-tooltip\" style=\"visibility: hidden;\">\n            <h2>EFFECT</h2>\n            <p>Increase production by +0%! :)</p>\n        </div>\n     */\n    static effectTooltip(): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"effect-tooltip\";\n        div.style.visibility = \"hidden\";\n        div.innerHTML = [\n            '<h2>EFFECT</h2>',\n            '<p>Increase production by +0%! :)</p>'\n        ].join(\"\");\n        return div;\n    }\n\n    /**\n     * Creates a div which represents an achievement.\n     * @returns {HTMLDivElement}\n     * <div class=\"achievement\" style=\"visibility: hidden;\">\n            <p class=\"description\">...</p>\n            <div class=\"space\"></div>\n            <p class=\"how\">...</p>\n        </div>\n     */\n    static achievement(): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"achievement\";\n        div.style.visibility = \"hidden\";\n        div.innerHTML = [\n            '<p class=\"description\">...</p>',\n            '<div class=\"space\"></div>',\n            '<p class=\"how\">...</p>'\n        ].join(\"\");\n        return div;\n    }\n\n    /**\n     * Creates a div which represents a dialog.\n     * @returns {HTMLDivElement}\n     * <div class=\"dialog\" style=\"visibility: hidden;\">\n            <div class=\"black\">\n                <div class=\"box\"></div>\n            </div>\n        </div>\n     */\n    static dialog(): HTMLDivElement {\n        let div = document.createElement(\"div\");\n        div.className = \"dialog\";\n        div.style.visibility = \"hidden\";\n        div.innerHTML = `\n            <div class=\"black\">\n                <div class=\"box\"></div>\n            </div>\n        `;\n        return div;\n    }\n}\n\nexport default HtmlBuilder;","/**\n * Represents information of a language.\n */\ninterface Language {\n    /**\n     * The ID of the language.\n     */\n    id: string\n\n    /**\n     * The name of the language.\n     */\n    name: string,\n    \n    /**\n     * The translator of the language.\n     */\n    author: string,\n\n    /**\n     * Adds commas to a number and returns it, If the number is too big, it will instead add a suffix to the decimal number.\\\n     * For example: `1.234e12` -----> `1.234 trillion`.\n     * @param number The number to format.\n     * @param br Whether or not the number is rounded down.\n     * @param nodot If `true`, there will be no dot which is added when the number is\n     * - less than `10`\n     * - is a decimal\n     * @returns the formatted number\n     */\n    commify: (number: number, br?: boolean, nodot?: boolean) => string,\n\n    /**\n     * Formats a date into this format:\\\n     * **Month** **DD**, **YYYY**\n     * @param date Date to format.\n     * @returns The formatted date as a string.\n     */\n    format_date: (date: Date) => string,\n\n    /**\n     * Formats a building description.\n     * @param description The formatted string. (it should be already formatted, but the parameters NOT filled.)\n     * @param amount Number of buildings owned.\n     * @param rates The total rates of the type of the building.\n     * @param total Number of coins made by the building type.\n     * @returns A formatted description.\n     */\n    format_building_description: (description: string, amount: number, rates: [number, number], total: number) => string\n\n    /**\n     * The translations.\n     */\n    translations: {\n        [key: string]: string\n    }\n}\n\n/**\n * A class that translates ID strings into language strings.\n */\nclass Translator {\n    /**\n     * The language dictionary stored by the game.\n     */\n    languages: {[key: string]: Language} = {};\n\n    /**\n     * The selected language.\n     */\n    selected = \"en-us\";\n\n    /**\n     * The fallback language chosen. This is used, for example, if a translation for another language doesn't exist.\n     */\n    fallback = \"_fb\";\n\n    /**\n     * Warnings about the chosen language.\n     */\n    warns: string[] = [];\n\n    /**\n     * Creates a new `Translator`. It also scans for languages,\n     */\n    constructor() {\n        // Load all the languages in /languages\n        this.load(require.context('./languages/', false, /\\.ts/));\n    }\n\n    /**\n     * Loads a list of languages. This is used in the constructor, and **SHOULD NOT BE USED OUTSIDE**!\n     * @param languages Languages to load.\n     */\n    private load(languages: __WebpackModuleApi.RequireContext) {\n        for (let lang of languages.keys()) {\n            const exports = languages(lang);\n            if (!exports) {\n                throwLangError(lang, \"No export found.\");\n                continue;\n            }\n            const languageInfo = exports.default;\n            if (!languageInfo) {\n                throwLangError(lang, \"No default export found.\");\n                continue;\n            }\n            if (typeof languageInfo !== \"object\" || Array.isArray(languageInfo)) {\n                throwLangError(lang, \"Language info must be a dictionary.\");\n                continue;\n            }\n            if (!languageInfo.id) {\n                throwLangError(lang, \"`id` was not found in the language declaration. It must be the language code, e.g. \\\"en-us\\\"\");\n                continue;\n            }\n            if (!languageInfo.name) {\n                throwLangError(lang, \"`name` was not found in the language declaration. It must be the language's name, e.g. \\\"English\\\"\");\n                continue;\n            }\n            if (!languageInfo.author) {\n                throwLangError(lang, \"`author` was not found in the language declaration. It must be the translator, e.g. \\\"Laptop59\\\"\");\n                continue;\n            }\n            if (!languageInfo.commify) {\n                throwLangError(lang, \"`commify` was not found in the language declaration. It must be a commifier function, e.g. (number: number) => number.\");\n                continue;\n            }\n            if (!languageInfo.format_building_description) {\n                throwLangError(lang, \"`format_building_description` was not found in the language declaration. It must be a building-description formatter, e.g. (description: string, amount: number, rates: [number, number], total: number, buildings: number) => ... .\");\n            }\n            if (!languageInfo.format_date) {\n                throwLangError(lang, \"`format_date` was not found in the language declaration. It must be a date formatter, e.g. (date: Date) => date.toString().\");\n                continue;\n            }\n            if (!languageInfo.translations) {\n                throwLangError(lang, \"`translations` was not found in the language declaration. It must be the translations, e.g. {\\\"building.cursor.singular\\\": \\\"Cursor\\\"}\");\n                continue;\n            }\n            this.languages[languageInfo.id] = languageInfo;\n        }\n\n        // At least one function must be available.\n\n        this.logLanguages();\n\n        function throwLangError(lang: string, error: string) {\n            console.error(`Language error while parsing ${lang}: `, new SyntaxError(error));\n        }\n    }\n\n    /**\n     * Logs all the languages in the translator.\n     */\n    logLanguages() {\n        console.log(\"[LANGUAGES] Loaded languages:\\n\" + Object.entries(this.languages).map(([id, data]) => \"+ \" + data.name + \" (\" + id + \")\\n\").join(\"\"))\n    }\n\n    /**\n     * Gets the current language object.\n     * @returns The current language\n     */\n    getCurrent() {\n        if (Object.keys(this.languages).length < 1) throw new Error(\"No languages are available.\");\n        return this.languages[this.selected];\n    }\n\n    /**\n     * Gets the fallback language object.\n     * @returns The fallback language\n     */\n    getFallback() {\n        if (Object.keys(this.languages).length < 1) throw new Error(\"No languages are available.\");\n        return this.languages?.[this.fallback];\n    }\n\n    /**\n     * Adds commas to a number and returns it, If the number is too big, it will instead add a suffix to the decimal number.\\\n     * For example: `1.234e12` -----> `1.234 trillion`.\n     * @param number The number to format.\n     * @param br Whether or not the number is rounded down.\n     * @param nodot If `true`, there will be no dot which is added when the number is\n     * - less than `10`\n     * - is a decimal\n     * @returns the formatted number\n     */\n    commify (number: number, br?: boolean, nodot?: boolean): string {\n        return (this.getCurrent() ?? this.getFallback())?.commify(number, br, nodot) ?? number;\n    }\n\n    /**\n     * Formats a date into this format:\\\n     * **Month** **DD**, **YYYY**\n     * @param date Date to format.\n     * @returns The formatted date as a string.\n     */\n    formatDate(date: Date) {\n        return (this.getCurrent() ?? this.getFallback())?.format_date(date);\n    }\n\n    /**\n     * Gets the translated string of a string ID.\n     * @param str The ID of the translated string to translate.\n     * @returns The translated string.\n     */\n    format(str: string, ...args: string[]) {\n        return this.formatAsTuple(str, ...args)[0];\n    }\n\n    /**\n     * Gets the translated string of a string ID, as a tuple.\n     * @param str The ID of the translated string to translate.\n     * @returns The translated string, along with the unused args tuple.\n     */\n    formatAsTuple(str: string, ...args: string[]): [string, string[]] {\n        const result = this.getCurrent()?.translations[str];\n        if (!this.warns.includes(str) && !result) {\n            let level = 1;\n            this.warns.push(str);\n\n            const fallbackResult = this.getFallback()?.translations?.[str];\n            if (!fallbackResult) {\n                level = 2;\n            }\n\n            if (level > 1) {\n                console.error(\"[TRANSLATION] Unknown key \", str);\n                return [str, args];\n            } else {\n                console.warn(\"[TRANSLATION] Missing translation for key \" + str);\n                return this.fillArgs(fallbackResult, args);\n            }\n        }\n\n        return this.fillArgs(result ?? str, args);\n    }\n\n    /**\n     * Fills arguments (`%n`) with values.\n     * @param str String to fill.\n     * @param args Arguments.\n     * @returns The tuple of the filled string, and the unused strings.\n     */\n    fillArgs(str: string, args: string[]): [string, string[]] {\n        var str = str;\n        var unused: string[] = [];\n        args.forEach(a => unused.push(a));\n        for (let i = 0; i < args.length; i++) {\n            if (str.includes(\"%\" + (i+1))) unused[i] = \"\";\n            str = str.replace(\"%\" + (i+1), args[i]);\n        }\n        return [str, unused.filter(arg => !!arg)];\n    }\n\n    /**\n     * Formats a building from ID into a display string.\n     * @param id ID of the building.\n     * @param isPlural Whether it wants the plural version or not.\n     * @returns The translated string of the building.\n     */\n    formatBuilding(id: string, isPlural: boolean = false) {\n        return this.format(\"building.\" + id + (isPlural ? \".plural\" : \".singular\"));\n    }\n\n    /**\n     * Formats a building's description from ID into a display string.\n     * @param id ID of the building.\n     * @returns The translated string of the building's description.\n     */\n    formatBuildingDescription(id: string, amount: number, rates: [number, number], total: number) {\n        const description = this.format(\"building.\" + id + \".description\");\n        return (this.getCurrent() ?? this.getFallback())?.format_building_description(description, amount, rates, total);\n    }\n\n    /**\n     * Formats an achievement category.\n     * @param id ID of the category.\n     * @returns The translated string of the category.\n     */\n    formatAchievementCategory(id: string) {\n        return this.format(\"achievements.category.\" + id);\n    }\n\n    /**\n     * Formats an achievement progress in text.\n     * @param count The number of achievements owned by the player in the category (`%1`).\n     * @param max The number of achievements in the category (`%2`).\n     * @returns The translated string of the progress.\n     */\n    formatAchievementCategoryCount(count: string, max: string) {\n        return this.format(\"achievements.categories.count\").replace(\"%1\", count).replace(\"%2\", max);\n    }\n}\n\nexport default Translator;","import YELLOW_SRC from \"./images/big_coin.png\";\nimport ORANGE_SRC from \"./images/orange_coin.png\";\n\n/**\n * A dictionary of coin images defined.\n */\ninterface CoinImages {\n    [key: string]: HTMLImageElement\n}\n\n/**\n * A class that is a storehouse of coin images.\n */\nclass CoinImager {\n    /**\n     * The images owned by the coin imager.\n     */\n    private images: CoinImages = {};\n\n    /**\n     * Creates a new `CoinImager`.\n     */\n    constructor() {\n        // Register our images.\n        this.createImage(\"yellow\", YELLOW_SRC);\n        this.createImage(\"orange\", ORANGE_SRC);\n    }\n\n    /**\n     * Defines a new coin image in the imager.\n    */\n    private createImage(id: string, src: string) {\n        this.images[id] = new Image();\n        this.images[id].src = src;\n    }\n\n    /**\n     * Obtains a coin image from the imager.\n     * @param id The ID of the image\n     * @returns {HTMLImageElement | null} The image found, or `null` if it doesn't exit.\n     */\n    getImage(id: string): HTMLImageElement | null {\n        return this.images[id] || null;\n    }\n}\n\nexport default CoinImager;","import Game from \"./Game\";\nimport \"./styles.scss\";\nimport HtmlBuilder from \"./HtmlBuilder\";\nimport Translator from \"./Translator\";\n\ninit();\n\n/**\n * Start the game initially.\n */\nfunction init() {\n    // Create a new translator.\n    const translator = new Translator();\n\n    // Populate the body tag.\n    HtmlBuilder.populate(translator);\n\n    // Create a game object.\n    const game = new Game(translator);\n\n    // Add a way to access the game, for now.\n    // But only if we are in development mode.\n    if (process.env.NODE_ENV === \"development\") {\n        // @ts-ignore\n        window.Game = game;\n    }\n\n    // Start the game loop.\n    game.start();\n}"],"names":["__webpack_require__","moduleId","module","cachedModule","__webpack_module_cache__","undefined","exports","id","__webpack_modules__","___CSS_LOADER_URL_IMPORT_0___","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","URL","push","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","alreadyImportedModules","k","_k","url","options","__esModule","default","String","test","slice","hash","needQuotes","replace","base64","cssMapping","btoa","unescape","encodeURIComponent","JSON","stringify","getIndexByIdentifier","identifier","result","stylesInDOM","modulesToDom","count","indexByIdentifier","obj","updater","idCountMap","identifiers","base","css","sourceMap","references","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insertBySelector","insert","style","target","getTarget","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","Error","appendChild","insertStyleElement","element","createElement","setAttributes","attributes","setAttributesWithoutAttributes","styleElement","nonce","setAttribute","apply","styleTagTransform","removeStyleElement","parentNode","removeChild","styleSheet","cssText","firstChild","createTextNode","TRANSLATION","number","br","nodot","Math","floor","isFinite","commify","toFixed","description","amount","rates","total","buildings","date","getMonth","getDate","getFullYear","illion","log10","max","pow","illionSuffix","convertToEnglish","cpccps","extra","cpc","cps","parts","each","so_far","x","webpackContext","req","webpackContextResolve","o","code","keys","webpackContextKeys","Object","resolve","m","n","getter","d","a","definition","key","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","scriptUrl","scripts","importScripts","location","currentScript","src","getElementsByTagName","p","b","baseURI","self","href","nc","selector","node","elem","selectorAll","querySelectorAll","assert","upgrades","EffectType","categorizedAchievements","achievements","c","FallingCoinType","SaveMedium","Tab","version","cursor","family","shop","bank","carnival","power_plant","_","game","getNumberOfBuildings","getTotalBuildings","type","duration","maxDuration","FRENZY","SUPER_FRENZY","tick","delta","getEffect","expired","getIcon","getMeta","values","total_coins","goal","totalCoins","icon","rawCoinsPerSec","clicks","building_milestones","buildingsNumber","destruction","coinsDestroyed","hasEffect","canvas","imager","y","s","random","rotation","PI","YELLOW","destroy","ctx","getContext","setSpecial","ci","getImage","ORANGE","draw","xs","ys","xOffset","yOffset","globalAlpha","alpha","realX","save","translate","rotate","drawImage","is","restore","fall","isTouching","X","Y","YS","click","addEffect","width","SUGGESTED","encryptedMode","generateText","generateObject","unText","convertToSections","text","encrypt","coins","bought","startDate","effects","simplifyEffects","desimplifyEffects","Effect","generateFreshObject","Date","loadText","string","data","decrypt","TypeError","convertToObject","loadObject","console","error","loadIn","noKey","filter","isNaN","keypairsToText","arrayToText","getTime","effectsToText","textToArray","str","split","textToKeypairs","fragments","parseFloat","bool","Array","isArray","parseInt","textToEffects","arr","entries","encrypted","charCodeAt","charAt","start","decrypted","chars","startsWith","endsWith","fromCharCode","atob","loadFromFile","input","addEventListener","files","saveToFile","showSaveFilePicker","suggestedName","types","accept","createWritable","writable","write","close","DOMException","message","includes","saveToDownloads","blob","Blob","createObjectURL","display","download","body","revokeObjectURL","saveToStorage","localStorage","setItem","loadFromStorage","getItem","wipe","images","createImage","Image","translator","coinsPerClick","coinsPerSec","oldTime","playingMusic","ready","coinSize","iconSize","ticks","buyMode","selectedBuilding","selectedUpgrade","selectedAchievement","selectedEffect","mouseX","mouseY","achieveMultiplier","buyModeColours","fallingCoins","stat","selectedTab","STATS","multiplier","unboostedMultiplier","boostMultiplier","timeSinceCoinSpawn","coinSpawnInterval","getElementsByClassName","canvasClick","bind","setMouse","saveManager","coinImager","loadImages","setupData","registerStats","wipeSave","saveGame","TEXT","FILE","loadGame","ctrlKey","preventDefault","doStart","cn","cv","category","makeIcon","setSelectedTab","u","generateUpgrade","clickUpgrade","sort","cost","buildingElement","className","clickBuilding","innerHTML","formatAchievementCategory","imgdiv","forEach","button","changeBuyMode","getAttribute","coin","playMusic","warn","registerStat","rawCoinsPerClick","round","formatDate","yes","format","no","addToElement","showDialog","then","opt","medium","saveDiv","textarea","loadDiv","visibility","div","tagName","title","buttons","stay","Promise","titleDiv","oldButton","parentElement","textContent","onclick","append","getCurrentMultiplier","reduce","getBoost","boost","clientX","clientY","big_coin","play","catch","requestAnimationFrame","tickWithTryCatch","time","reload","updateVariables","updateText","checkForNewAchievements","updateUpgrades","checked","Game","AUTOSAVE_INTERVAL","resizeCanvas","animateCoin","Infinity","setTimeout","ck","unlocked","indexOf","achievementPopUp","children","formatAchievementCategoryCount","building","unlock","tid","achievementTooltip","effectTooltip","meta","afford","coinsHeader","textCoins","big","mulCoinsPerClick","mulCoinsPerSec","nextBuildingsCost","color","formatBuilding","findIndex","top","formatBuildingDescription","find","left","clientHeight","clientWidth","height","W","H","WW","HH","clearRect","animateFallingCoins","coinIndex","A","B","coinClick","add","addToTotal","size","img","costText","amountText","getBuildings","getBuildingObject","build","baseCost","addBuildings","getUpgrade","eval","setBoost","effect","fillStyle","beginPath","moveTo","arc","percentageDuration","lineTo","closePath","fill","some","newEffect","effectDiv","sign","upgrade","benefit","func","benefits","val","isLocked","requirements","num","excludeCursors","mode","tab","achievement","isTooltip","locked","indices","titlediv","adiv","elems","from","nA","nB","other","recent","locals","populate","generate","log","loadingDiv","audioWrapper","loopingMusic","canvasWrapper","middleWrapper","buildingsWrapper","buildingTooltip","upgradeTooltip","dialog","header","zIndex","source","controls","loop","audioElement","canvasSubHeader","name","canvasHeader","subheaders","subheader","span","innerSpan","innerEffects","tabDiv","tabWrapper","workWrapper","statsWrapper","optionsWrapper","typedButton","h2Stat","pStat","pStatWithImportance","translationId","args","tuple","formatAsTuple","outerHTML","languages","selected","fallback","warns","load","throwLangError","lang","SyntaxError","languageInfo","author","format_building_description","format_date","translations","logLanguages","getCurrent","getFallback","level","fallbackResult","fillArgs","unused","arg","isPlural","init"],"sourceRoot":""}